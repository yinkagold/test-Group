"use strict";function cov_20y88x9fr1(){var path="C:\\TUT2019\\SoftwareTesting\\COMP.SE.200-2021-2022-1\\src\\filter.js";var hash="57fd6d1601ae2233e9699f38144e8e1533b33d24";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"C:\\TUT2019\\SoftwareTesting\\COMP.SE.200-2021-2022-1\\src\\filter.js",statementMap:{"0":{start:{line:3,column:0},end:{line:5,column:3}},"1":{start:{line:30,column:14},end:{line:30,column:16}},"2":{start:{line:31,column:17},end:{line:31,column:18}},"3":{start:{line:32,column:15},end:{line:32,column:47}},"4":{start:{line:33,column:15},end:{line:33,column:19}},"5":{start:{line:35,column:2},end:{line:40,column:3}},"6":{start:{line:36,column:16},end:{line:36,column:28}},"7":{start:{line:37,column:4},end:{line:39,column:5}},"8":{start:{line:38,column:6},end:{line:38,column:33}},"9":{start:{line:41,column:2},end:{line:41,column:16}},"10":{start:{line:44,column:0},end:{line:44,column:25}}},fnMap:{"0":{name:"filter",decl:{start:{line:29,column:9},end:{line:29,column:15}},loc:{start:{line:29,column:34},end:{line:42,column:1}},line:29}},branchMap:{"0":{loc:{start:{line:32,column:15},end:{line:32,column:47}},type:"cond-expr",locations:[{start:{line:32,column:31},end:{line:32,column:32}},{start:{line:32,column:35},end:{line:32,column:47}}],line:32},"1":{loc:{start:{line:37,column:4},end:{line:39,column:5}},type:"if",locations:[{start:{line:37,column:4},end:{line:39,column:5}},{start:{line:37,column:4},end:{line:39,column:5}}],line:37}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0},f:{"0":0},b:{"0":[0,0],"1":[0,0]},inputSourceMap:{version:3,sources:["filter.js"],names:["filter","array","predicate","index","resIndex","length","result","value"],mappings:";;;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;AAuBA,SAASA,MAAT,CAAgBC,KAAhB,EAAuBC,SAAvB,EAAkC;AAChC,MAAIC,QAAQ,CAAC,CAAb;AACA,MAAIC,WAAW,CAAf;AACA,MAAMC,SAASJ,SAAS,IAAT,GAAgB,CAAhB,GAAoBA,MAAMI,MAAzC;AACA,MAAMC,SAAS,CAAC,EAAD,CAAf;;AAEA,SAAO,EAAEH,KAAF,GAAUE,MAAjB,EAAyB;AACvB,QAAME,QAAQN,MAAME,KAAN,CAAd;AACA,QAAID,UAAUK,KAAV,EAAiBJ,KAAjB,EAAwBF,KAAxB,CAAJ,EAAoC;AAClCK,aAAOF,UAAP,IAAqBG,KAArB;AACD;AACF;AACD,SAAOD,MAAP;AACD;;kBAEcN,M",file:"filter.js",sourceRoot:"C:/TUT2019/SoftwareTesting/COMP.SE.200-2021-2022-1/src",sourcesContent:["/**\n * Iterates over elements of `array`, returning an array of all elements\n * `predicate` returns truthy for. The predicate is invoked with three\n * arguments: (value, index, array).\n *\n * **Note:** Unlike `remove`, this method returns a new array.\n *\n * @since 5.0.0\n * @category Array\n * @param {Array} array The array to iterate over.\n * @param {Function} predicate The function invoked per iteration.\n * @returns {Array} Returns the new filtered array.\n * @see pull, pullAll, pullAllBy, pullAllWith, pullAt, remove, reject\n * @example\n *\n * const users = [\n *   { 'user': 'barney', 'active': true },\n *   { 'user': 'fred',   'active': false }\n * ]\n *\n * filter(users, ({ active }) => active)\n * // => objects for ['barney']\n */\nfunction filter(array, predicate) {\n  let index = -1\n  let resIndex = 0\n  const length = array == null ? 0 : array.length\n  const result = [[]]\n\n  while (++index < length) {\n    const value = array[index]\n    if (predicate(value, index, array)) {\n      result[resIndex++] = value\n    }\n  }\n  return result\n}\n\nexport default filter\n"]},_coverageSchema:"1a1c01bbd47fc00a2c39e90264f33305004495a9",hash:"57fd6d1601ae2233e9699f38144e8e1533b33d24"};var coverage=global[gcv]||(global[gcv]={});if(!coverage[path]||coverage[path].hash!==hash){coverage[path]=coverageData;}var actualCoverage=coverage[path];{// @ts-ignore
cov_20y88x9fr1=function(){return actualCoverage;};}return actualCoverage;}cov_20y88x9fr1();cov_20y88x9fr1().s[0]++;Object.defineProperty(exports,"__esModule",{value:true});/**
 * Iterates over elements of `array`, returning an array of all elements
 * `predicate` returns truthy for. The predicate is invoked with three
 * arguments: (value, index, array).
 *
 * **Note:** Unlike `remove`, this method returns a new array.
 *
 * @since 5.0.0
 * @category Array
 * @param {Array} array The array to iterate over.
 * @param {Function} predicate The function invoked per iteration.
 * @returns {Array} Returns the new filtered array.
 * @see pull, pullAll, pullAllBy, pullAllWith, pullAt, remove, reject
 * @example
 *
 * const users = [
 *   { 'user': 'barney', 'active': true },
 *   { 'user': 'fred',   'active': false }
 * ]
 *
 * filter(users, ({ active }) => active)
 * // => objects for ['barney']
 */function filter(array,predicate){cov_20y88x9fr1().f[0]++;var index=(cov_20y88x9fr1().s[1]++,-1);var resIndex=(cov_20y88x9fr1().s[2]++,0);var length=(cov_20y88x9fr1().s[3]++,array==null?(cov_20y88x9fr1().b[0][0]++,0):(cov_20y88x9fr1().b[0][1]++,array.length));var result=(cov_20y88x9fr1().s[4]++,[[]]);cov_20y88x9fr1().s[5]++;while(++index<length){var value=(cov_20y88x9fr1().s[6]++,array[index]);cov_20y88x9fr1().s[7]++;if(predicate(value,index,array)){cov_20y88x9fr1().b[1][0]++;cov_20y88x9fr1().s[8]++;result[resIndex++]=value;}else{cov_20y88x9fr1().b[1][1]++;}}cov_20y88x9fr1().s[9]++;return result;}cov_20y88x9fr1().s[10]++;exports.default=filter;//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImZpbHRlci5qcyJdLCJuYW1lcyI6WyJmaWx0ZXIiLCJhcnJheSIsInByZWRpY2F0ZSIsImluZGV4IiwicmVzSW5kZXgiLCJsZW5ndGgiLCJyZXN1bHQiLCJ2YWx1ZSJdLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUF1QkEsU0FBU0EsTUFBVCxDQUFnQkMsS0FBaEIsRUFBdUJDLFNBQXZCLEVBQWtDO0FBQ2hDLE1BQUlDLFFBQVEsQ0FBQyxDQUFiO0FBQ0EsTUFBSUMsV0FBVyxDQUFmO0FBQ0EsTUFBTUMsU0FBU0osU0FBUyxJQUFULEdBQWdCLENBQWhCLEdBQW9CQSxNQUFNSSxNQUF6QztBQUNBLE1BQU1DLFNBQVMsQ0FBQyxFQUFELENBQWY7O0FBRUEsU0FBTyxFQUFFSCxLQUFGLEdBQVVFLE1BQWpCLEVBQXlCO0FBQ3ZCLFFBQU1FLFFBQVFOLE1BQU1FLEtBQU4sQ0FBZDtBQUNBLFFBQUlELFVBQVVLLEtBQVYsRUFBaUJKLEtBQWpCLEVBQXdCRixLQUF4QixDQUFKLEVBQW9DO0FBQ2xDSyxhQUFPRixVQUFQLElBQXFCRyxLQUFyQjtBQUNEO0FBQ0Y7QUFDRCxTQUFPRCxNQUFQO0FBQ0Q7O2tCQUVjTixNIiwiZmlsZSI6ImZpbHRlci5qcyIsInNvdXJjZVJvb3QiOiJDOi9UVVQyMDE5L1NvZnR3YXJlVGVzdGluZy9DT01QLlNFLjIwMC0yMDIxLTIwMjItMS9zcmMiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEl0ZXJhdGVzIG92ZXIgZWxlbWVudHMgb2YgYGFycmF5YCwgcmV0dXJuaW5nIGFuIGFycmF5IG9mIGFsbCBlbGVtZW50c1xuICogYHByZWRpY2F0ZWAgcmV0dXJucyB0cnV0aHkgZm9yLiBUaGUgcHJlZGljYXRlIGlzIGludm9rZWQgd2l0aCB0aHJlZVxuICogYXJndW1lbnRzOiAodmFsdWUsIGluZGV4LCBhcnJheSkuXG4gKlxuICogKipOb3RlOioqIFVubGlrZSBgcmVtb3ZlYCwgdGhpcyBtZXRob2QgcmV0dXJucyBhIG5ldyBhcnJheS5cbiAqXG4gKiBAc2luY2UgNS4wLjBcbiAqIEBjYXRlZ29yeSBBcnJheVxuICogQHBhcmFtIHtBcnJheX0gYXJyYXkgVGhlIGFycmF5IHRvIGl0ZXJhdGUgb3Zlci5cbiAqIEBwYXJhbSB7RnVuY3Rpb259IHByZWRpY2F0ZSBUaGUgZnVuY3Rpb24gaW52b2tlZCBwZXIgaXRlcmF0aW9uLlxuICogQHJldHVybnMge0FycmF5fSBSZXR1cm5zIHRoZSBuZXcgZmlsdGVyZWQgYXJyYXkuXG4gKiBAc2VlIHB1bGwsIHB1bGxBbGwsIHB1bGxBbGxCeSwgcHVsbEFsbFdpdGgsIHB1bGxBdCwgcmVtb3ZlLCByZWplY3RcbiAqIEBleGFtcGxlXG4gKlxuICogY29uc3QgdXNlcnMgPSBbXG4gKiAgIHsgJ3VzZXInOiAnYmFybmV5JywgJ2FjdGl2ZSc6IHRydWUgfSxcbiAqICAgeyAndXNlcic6ICdmcmVkJywgICAnYWN0aXZlJzogZmFsc2UgfVxuICogXVxuICpcbiAqIGZpbHRlcih1c2VycywgKHsgYWN0aXZlIH0pID0+IGFjdGl2ZSlcbiAqIC8vID0+IG9iamVjdHMgZm9yIFsnYmFybmV5J11cbiAqL1xuZnVuY3Rpb24gZmlsdGVyKGFycmF5LCBwcmVkaWNhdGUpIHtcbiAgbGV0IGluZGV4ID0gLTFcbiAgbGV0IHJlc0luZGV4ID0gMFxuICBjb25zdCBsZW5ndGggPSBhcnJheSA9PSBudWxsID8gMCA6IGFycmF5Lmxlbmd0aFxuICBjb25zdCByZXN1bHQgPSBbW11dXG5cbiAgd2hpbGUgKCsraW5kZXggPCBsZW5ndGgpIHtcbiAgICBjb25zdCB2YWx1ZSA9IGFycmF5W2luZGV4XVxuICAgIGlmIChwcmVkaWNhdGUodmFsdWUsIGluZGV4LCBhcnJheSkpIHtcbiAgICAgIHJlc3VsdFtyZXNJbmRleCsrXSA9IHZhbHVlXG4gICAgfVxuICB9XG4gIHJldHVybiByZXN1bHRcbn1cblxuZXhwb3J0IGRlZmF1bHQgZmlsdGVyXG4iXX0=
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImZpbHRlci5qcyJdLCJuYW1lcyI6WyJpbmRleCIsInJlc0luZGV4IiwibGVuZ3RoIiwiYXJyYXkiLCJyZXN1bHQiLCJ2YWx1ZSIsInByZWRpY2F0ZSIsImZpbHRlciJdLCJtYXBwaW5ncyI6Ijs0S0FBQTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztHQXVCQSxRQUFBLENBQUEsTUFBQSxDQUFBLEtBQUEsQ0FBQSxTQUFBLENBQWtDLHlCQUNoQyxHQUFJQSxDQUFBQSxLQUFBQSwwQkFBUSxDQUFaLENBQUlBLENBQUosQ0FDQSxHQUFJQyxDQUFBQSxRQUFBQSwwQkFBSixDQUFJQSxDQUFKLENBQ0EsR0FBTUMsQ0FBQUEsTUFBQUEsMEJBQVNDLEtBQUFBLEVBQUFBLElBQUFBLDZCQUFBQSxDQUFBQSw4QkFBb0JBLEtBQUFBLENBQW5DLE1BQWVBLENBQVRELENBQU4sQ0FDQSxHQUFNRSxDQUFBQSxNQUFBQSwwQkFBUyxDQUFmLEVBQWUsQ0FBVEEsQ0FBTixDQUpnQyx3QkFNaEMsTUFBTyxFQUFBLEtBQUEsQ0FBUCxNQUFBLENBQXlCLENBQ3ZCLEdBQU1DLENBQUFBLEtBQUFBLDBCQUFRRixLQUFBQSxDQUFkLEtBQWNBLENBQVJFLENBQU4sQ0FEdUIsd0JBRXZCLEdBQUlDLFNBQUFBLENBQUFBLEtBQUFBLENBQUFBLEtBQUFBLENBQUosS0FBSUEsQ0FBSixDQUFvQyxvREFDbENGLE1BQUFBLENBQU9ILFFBQVBHLEVBQUFBLENBQUFBLENBQUFBLEtBQUFBLENBQ0QsQ0FGRCxpQ0FHRCxDQVgrQix3QkFZaEMsTUFBQSxDQUFBLE1BQUEsQ0FDRCxDLHlDQUVjRyxNIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBJdGVyYXRlcyBvdmVyIGVsZW1lbnRzIG9mIGBhcnJheWAsIHJldHVybmluZyBhbiBhcnJheSBvZiBhbGwgZWxlbWVudHNcbiAqIGBwcmVkaWNhdGVgIHJldHVybnMgdHJ1dGh5IGZvci4gVGhlIHByZWRpY2F0ZSBpcyBpbnZva2VkIHdpdGggdGhyZWVcbiAqIGFyZ3VtZW50czogKHZhbHVlLCBpbmRleCwgYXJyYXkpLlxuICpcbiAqICoqTm90ZToqKiBVbmxpa2UgYHJlbW92ZWAsIHRoaXMgbWV0aG9kIHJldHVybnMgYSBuZXcgYXJyYXkuXG4gKlxuICogQHNpbmNlIDUuMC4wXG4gKiBAY2F0ZWdvcnkgQXJyYXlcbiAqIEBwYXJhbSB7QXJyYXl9IGFycmF5IFRoZSBhcnJheSB0byBpdGVyYXRlIG92ZXIuXG4gKiBAcGFyYW0ge0Z1bmN0aW9ufSBwcmVkaWNhdGUgVGhlIGZ1bmN0aW9uIGludm9rZWQgcGVyIGl0ZXJhdGlvbi5cbiAqIEByZXR1cm5zIHtBcnJheX0gUmV0dXJucyB0aGUgbmV3IGZpbHRlcmVkIGFycmF5LlxuICogQHNlZSBwdWxsLCBwdWxsQWxsLCBwdWxsQWxsQnksIHB1bGxBbGxXaXRoLCBwdWxsQXQsIHJlbW92ZSwgcmVqZWN0XG4gKiBAZXhhbXBsZVxuICpcbiAqIGNvbnN0IHVzZXJzID0gW1xuICogICB7ICd1c2VyJzogJ2Jhcm5leScsICdhY3RpdmUnOiB0cnVlIH0sXG4gKiAgIHsgJ3VzZXInOiAnZnJlZCcsICAgJ2FjdGl2ZSc6IGZhbHNlIH1cbiAqIF1cbiAqXG4gKiBmaWx0ZXIodXNlcnMsICh7IGFjdGl2ZSB9KSA9PiBhY3RpdmUpXG4gKiAvLyA9PiBvYmplY3RzIGZvciBbJ2Jhcm5leSddXG4gKi9cbmZ1bmN0aW9uIGZpbHRlcihhcnJheSwgcHJlZGljYXRlKSB7XG4gIGxldCBpbmRleCA9IC0xXG4gIGxldCByZXNJbmRleCA9IDBcbiAgY29uc3QgbGVuZ3RoID0gYXJyYXkgPT0gbnVsbCA/IDAgOiBhcnJheS5sZW5ndGhcbiAgY29uc3QgcmVzdWx0ID0gW1tdXVxuXG4gIHdoaWxlICgrK2luZGV4IDwgbGVuZ3RoKSB7XG4gICAgY29uc3QgdmFsdWUgPSBhcnJheVtpbmRleF1cbiAgICBpZiAocHJlZGljYXRlKHZhbHVlLCBpbmRleCwgYXJyYXkpKSB7XG4gICAgICByZXN1bHRbcmVzSW5kZXgrK10gPSB2YWx1ZVxuICAgIH1cbiAgfVxuICByZXR1cm4gcmVzdWx0XG59XG5cbmV4cG9ydCBkZWZhdWx0IGZpbHRlclxuIl0sInNvdXJjZVJvb3QiOiJDOi9UVVQyMDE5L1NvZnR3YXJlVGVzdGluZy9DT01QLlNFLjIwMC0yMDIxLTIwMjItMS9zcmMifQ==