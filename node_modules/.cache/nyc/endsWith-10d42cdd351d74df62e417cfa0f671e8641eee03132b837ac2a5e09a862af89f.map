{"version":3,"sources":["endsWith.js"],"names":["endsWith","string","target","position","length","undefined","end","slice"],"mappings":";;;;;AAAA;;;;;;;;;;;;;;;;;;;;;;AAsBA,SAASA,QAAT,CAAkBC,MAAlB,EAA0BC,MAA1B,EAAkCC,QAAlC,EAA4C;AAAA,MAClCC,MADkC,GACvBH,MADuB,CAClCG,MADkC;;AAE1CD,aAAWA,aAAaE,SAAb,GAAyBD,MAAzB,GAAkC,CAACD,QAA9C;AACA,MAAIA,WAAW,CAAX,IAAgBA,YAAYA,QAAhC,EAA0C;AACxCA,eAAW,CAAX;AACD,GAFD,MAGK,IAAIA,WAAWC,MAAf,EAAuB;AAC1BD,eAAWC,MAAX;AACD;AACD,MAAME,MAAMH,QAAZ;AACAA,cAAYD,OAAOE,MAAnB;AACA,SAAOD,YAAY,CAAZ,IAAiBF,OAAOM,KAAP,CAAaJ,QAAb,EAAuBG,GAAvB,KAA+BJ,MAAvD;AACD;;kBAEcF,Q","file":"endsWith.js","sourceRoot":"C:/TUT2019/SoftwareTesting/COMP.SE.200-2021-2022-1/src","sourcesContent":["/**\n * Checks if `string` ends with the given target string.\n *\n * @since 3.0.0\n * @category String\n * @param {string} [string=''] The string to inspect.\n * @param {string} [target] The string to search for.\n * @param {number} [position=string.length] The position to search up to.\n * @returns {boolean} Returns `true` if `string` ends with `target`,\n *  else `false`.\n * @see includes, startsWith\n * @example\n *\n * endsWith('abc', 'c')\n * // => true\n *\n * endsWith('abc', 'b')\n * // => false\n *\n * endsWith('abc', 'b', 2)\n * // => true\n */\nfunction endsWith(string, target, position) {\n  const { length } = string\n  position = position === undefined ? length : +position\n  if (position < 0 || position != position) {\n    position = 0\n  }\n  else if (position > length) {\n    position = length\n  }\n  const end = position\n  position -= target.length\n  return position >= 0 && string.slice(position, end) == target\n}\n\nexport default endsWith\n"]}