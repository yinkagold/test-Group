{"version":3,"sources":["isSymbol.js"],"names":["isSymbol","value","type"],"mappings":";;;;;;;;AAAA;;;;;;AAEA;;;;;;;;;;;;;;;AAeA,SAASA,QAAT,CAAkBC,KAAlB,EAAyB;AACvB,MAAMC,cAAcD,KAAd,yCAAcA,KAAd,CAAN;AACA,SAAOC,QAAQ,QAAR,IAAqBA,SAAS,QAAT,IAAqBD,SAAS,IAA9B,IAAsC,sBAAOA,KAAP,KAAiB,iBAAnF;AACD;;kBAEcD,Q","file":"isSymbol.js","sourceRoot":"C:/TUT2019/SoftwareTesting/COMP.SE.200-2021-2022-1/src","sourcesContent":["import getTag from './.internal/getTag.js'\n\n/**\n * Checks if `value` is classified as a `Symbol` primitive or object.\n *\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n * @example\n *\n * isSymbol(Symbol.iterator)\n * // => true\n *\n * isSymbol('abc')\n * // => false\n */\nfunction isSymbol(value) {\n  const type = typeof value\n  return type == 'symbol' || (type === 'object' && value != null && getTag(value) == '[object Symbol]')\n}\n\nexport default isSymbol\n"]}