"use strict";function cov_13b99t520x(){var path="C:\\TUT2019\\SoftwareTesting\\COMP.SE.200-2021-2022-1\\src\\every.js";var hash="0b90ae83bfe3aea5433066cc0c19856d2671b804";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"C:\\TUT2019\\SoftwareTesting\\COMP.SE.200-2021-2022-1\\src\\every.js",statementMap:{"0":{start:{line:3,column:0},end:{line:5,column:3}},"1":{start:{line:28,column:14},end:{line:28,column:16}},"2":{start:{line:29,column:15},end:{line:29,column:47}},"3":{start:{line:31,column:2},end:{line:35,column:3}},"4":{start:{line:32,column:4},end:{line:34,column:5}},"5":{start:{line:33,column:6},end:{line:33,column:19}},"6":{start:{line:36,column:2},end:{line:36,column:14}},"7":{start:{line:39,column:0},end:{line:39,column:24}}},fnMap:{"0":{name:"every",decl:{start:{line:27,column:9},end:{line:27,column:14}},loc:{start:{line:27,column:33},end:{line:37,column:1}},line:27}},branchMap:{"0":{loc:{start:{line:29,column:15},end:{line:29,column:47}},type:"cond-expr",locations:[{start:{line:29,column:31},end:{line:29,column:32}},{start:{line:29,column:35},end:{line:29,column:47}}],line:29},"1":{loc:{start:{line:32,column:4},end:{line:34,column:5}},type:"if",locations:[{start:{line:32,column:4},end:{line:34,column:5}},{start:{line:32,column:4},end:{line:34,column:5}}],line:32}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0},f:{"0":0},b:{"0":[0,0],"1":[0,0]},inputSourceMap:{version:3,sources:["every.js"],names:["every","array","predicate","index","length"],mappings:";;;;;AAAA;;;;;;;;;;;;;;;;;;;;;AAqBA,SAASA,KAAT,CAAeC,KAAf,EAAsBC,SAAtB,EAAiC;AAC/B,MAAIC,QAAQ,CAAC,CAAb;AACA,MAAMC,SAASH,SAAS,IAAT,GAAgB,CAAhB,GAAoBA,MAAMG,MAAzC;;AAEA,SAAO,EAAED,KAAF,GAAUC,MAAjB,EAAyB;AACvB,QAAI,CAACF,UAAUD,MAAME,KAAN,CAAV,EAAwBA,KAAxB,EAA+BF,KAA/B,CAAL,EAA4C;AAC1C,aAAO,KAAP;AACD;AACF;AACD,SAAO,IAAP;AACD;;kBAEcD,K",file:"every.js",sourceRoot:"C:/TUT2019/SoftwareTesting/COMP.SE.200-2021-2022-1/src",sourcesContent:["/**\n * Checks if `predicate` returns truthy for **all** elements of `array`.\n * Iteration is stopped once `predicate` returns falsey. The predicate is\n * invoked with three arguments: (value, index, array).\n *\n * **Note:** This method returns `true` for\n * [empty arrays](https://en.wikipedia.org/wiki/Empty_set) because\n * [everything is true](https://en.wikipedia.org/wiki/Vacuous_truth) of\n * elements of empty arrays.\n *\n * @since 5.0.0\n * @category Array\n * @param {Array} array The array to iterate over.\n * @param {Function} predicate The function invoked per iteration.\n * @returns {boolean} Returns `true` if all elements pass the predicate check,\n *  else `false`.\n * @example\n *\n * every([true, 1, null, 'yes'], Boolean)\n * // => false\n */\nfunction every(array, predicate) {\n  let index = -1\n  const length = array == null ? 0 : array.length\n\n  while (++index < length) {\n    if (!predicate(array[index], index, array)) {\n      return false\n    }\n  }\n  return true\n}\n\nexport default every\n"]},_coverageSchema:"1a1c01bbd47fc00a2c39e90264f33305004495a9",hash:"0b90ae83bfe3aea5433066cc0c19856d2671b804"};var coverage=global[gcv]||(global[gcv]={});if(!coverage[path]||coverage[path].hash!==hash){coverage[path]=coverageData;}var actualCoverage=coverage[path];{// @ts-ignore
cov_13b99t520x=function(){return actualCoverage;};}return actualCoverage;}cov_13b99t520x();cov_13b99t520x().s[0]++;Object.defineProperty(exports,"__esModule",{value:true});/**
 * Checks if `predicate` returns truthy for **all** elements of `array`.
 * Iteration is stopped once `predicate` returns falsey. The predicate is
 * invoked with three arguments: (value, index, array).
 *
 * **Note:** This method returns `true` for
 * [empty arrays](https://en.wikipedia.org/wiki/Empty_set) because
 * [everything is true](https://en.wikipedia.org/wiki/Vacuous_truth) of
 * elements of empty arrays.
 *
 * @since 5.0.0
 * @category Array
 * @param {Array} array The array to iterate over.
 * @param {Function} predicate The function invoked per iteration.
 * @returns {boolean} Returns `true` if all elements pass the predicate check,
 *  else `false`.
 * @example
 *
 * every([true, 1, null, 'yes'], Boolean)
 * // => false
 */function every(array,predicate){cov_13b99t520x().f[0]++;var index=(cov_13b99t520x().s[1]++,-1);var length=(cov_13b99t520x().s[2]++,array==null?(cov_13b99t520x().b[0][0]++,0):(cov_13b99t520x().b[0][1]++,array.length));cov_13b99t520x().s[3]++;while(++index<length){cov_13b99t520x().s[4]++;if(!predicate(array[index],index,array)){cov_13b99t520x().b[1][0]++;cov_13b99t520x().s[5]++;return false;}else{cov_13b99t520x().b[1][1]++;}}cov_13b99t520x().s[6]++;return true;}cov_13b99t520x().s[7]++;exports.default=every;//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImV2ZXJ5LmpzIl0sIm5hbWVzIjpbImV2ZXJ5IiwiYXJyYXkiLCJwcmVkaWNhdGUiLCJpbmRleCIsImxlbmd0aCJdLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBcUJBLFNBQVNBLEtBQVQsQ0FBZUMsS0FBZixFQUFzQkMsU0FBdEIsRUFBaUM7QUFDL0IsTUFBSUMsUUFBUSxDQUFDLENBQWI7QUFDQSxNQUFNQyxTQUFTSCxTQUFTLElBQVQsR0FBZ0IsQ0FBaEIsR0FBb0JBLE1BQU1HLE1BQXpDOztBQUVBLFNBQU8sRUFBRUQsS0FBRixHQUFVQyxNQUFqQixFQUF5QjtBQUN2QixRQUFJLENBQUNGLFVBQVVELE1BQU1FLEtBQU4sQ0FBVixFQUF3QkEsS0FBeEIsRUFBK0JGLEtBQS9CLENBQUwsRUFBNEM7QUFDMUMsYUFBTyxLQUFQO0FBQ0Q7QUFDRjtBQUNELFNBQU8sSUFBUDtBQUNEOztrQkFFY0QsSyIsImZpbGUiOiJldmVyeS5qcyIsInNvdXJjZVJvb3QiOiJDOi9UVVQyMDE5L1NvZnR3YXJlVGVzdGluZy9DT01QLlNFLjIwMC0yMDIxLTIwMjItMS9zcmMiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIENoZWNrcyBpZiBgcHJlZGljYXRlYCByZXR1cm5zIHRydXRoeSBmb3IgKiphbGwqKiBlbGVtZW50cyBvZiBgYXJyYXlgLlxuICogSXRlcmF0aW9uIGlzIHN0b3BwZWQgb25jZSBgcHJlZGljYXRlYCByZXR1cm5zIGZhbHNleS4gVGhlIHByZWRpY2F0ZSBpc1xuICogaW52b2tlZCB3aXRoIHRocmVlIGFyZ3VtZW50czogKHZhbHVlLCBpbmRleCwgYXJyYXkpLlxuICpcbiAqICoqTm90ZToqKiBUaGlzIG1ldGhvZCByZXR1cm5zIGB0cnVlYCBmb3JcbiAqIFtlbXB0eSBhcnJheXNdKGh0dHBzOi8vZW4ud2lraXBlZGlhLm9yZy93aWtpL0VtcHR5X3NldCkgYmVjYXVzZVxuICogW2V2ZXJ5dGhpbmcgaXMgdHJ1ZV0oaHR0cHM6Ly9lbi53aWtpcGVkaWEub3JnL3dpa2kvVmFjdW91c190cnV0aCkgb2ZcbiAqIGVsZW1lbnRzIG9mIGVtcHR5IGFycmF5cy5cbiAqXG4gKiBAc2luY2UgNS4wLjBcbiAqIEBjYXRlZ29yeSBBcnJheVxuICogQHBhcmFtIHtBcnJheX0gYXJyYXkgVGhlIGFycmF5IHRvIGl0ZXJhdGUgb3Zlci5cbiAqIEBwYXJhbSB7RnVuY3Rpb259IHByZWRpY2F0ZSBUaGUgZnVuY3Rpb24gaW52b2tlZCBwZXIgaXRlcmF0aW9uLlxuICogQHJldHVybnMge2Jvb2xlYW59IFJldHVybnMgYHRydWVgIGlmIGFsbCBlbGVtZW50cyBwYXNzIHRoZSBwcmVkaWNhdGUgY2hlY2ssXG4gKiAgZWxzZSBgZmFsc2VgLlxuICogQGV4YW1wbGVcbiAqXG4gKiBldmVyeShbdHJ1ZSwgMSwgbnVsbCwgJ3llcyddLCBCb29sZWFuKVxuICogLy8gPT4gZmFsc2VcbiAqL1xuZnVuY3Rpb24gZXZlcnkoYXJyYXksIHByZWRpY2F0ZSkge1xuICBsZXQgaW5kZXggPSAtMVxuICBjb25zdCBsZW5ndGggPSBhcnJheSA9PSBudWxsID8gMCA6IGFycmF5Lmxlbmd0aFxuXG4gIHdoaWxlICgrK2luZGV4IDwgbGVuZ3RoKSB7XG4gICAgaWYgKCFwcmVkaWNhdGUoYXJyYXlbaW5kZXhdLCBpbmRleCwgYXJyYXkpKSB7XG4gICAgICByZXR1cm4gZmFsc2VcbiAgICB9XG4gIH1cbiAgcmV0dXJuIHRydWVcbn1cblxuZXhwb3J0IGRlZmF1bHQgZXZlcnlcbiJdfQ==
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImV2ZXJ5LmpzIl0sIm5hbWVzIjpbImluZGV4IiwibGVuZ3RoIiwiYXJyYXkiLCJwcmVkaWNhdGUiLCJldmVyeSJdLCJtYXBwaW5ncyI6Ijs0S0FBQTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7R0FxQkEsUUFBQSxDQUFBLEtBQUEsQ0FBQSxLQUFBLENBQUEsU0FBQSxDQUFpQyx5QkFDL0IsR0FBSUEsQ0FBQUEsS0FBQUEsMEJBQVEsQ0FBWixDQUFJQSxDQUFKLENBQ0EsR0FBTUMsQ0FBQUEsTUFBQUEsMEJBQVNDLEtBQUFBLEVBQUFBLElBQUFBLDZCQUFBQSxDQUFBQSw4QkFBb0JBLEtBQUFBLENBQW5DLE1BQWVBLENBQVRELENBQU4sQ0FGK0Isd0JBSS9CLE1BQU8sRUFBQSxLQUFBLENBQVAsTUFBQSxDQUF5Qix5QkFDdkIsR0FBSSxDQUFDRSxTQUFBQSxDQUFVRCxLQUFBQSxDQUFWQyxLQUFVRCxDQUFWQyxDQUFBQSxLQUFBQSxDQUFMLEtBQUtBLENBQUwsQ0FBNEMsb0RBQzFDLE1BQUEsTUFBQSxDQUNELENBRkQsaUNBR0QsQ0FSOEIsd0JBUy9CLE1BQUEsS0FBQSxDQUNELEMsd0NBRWNDLEsiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIENoZWNrcyBpZiBgcHJlZGljYXRlYCByZXR1cm5zIHRydXRoeSBmb3IgKiphbGwqKiBlbGVtZW50cyBvZiBgYXJyYXlgLlxuICogSXRlcmF0aW9uIGlzIHN0b3BwZWQgb25jZSBgcHJlZGljYXRlYCByZXR1cm5zIGZhbHNleS4gVGhlIHByZWRpY2F0ZSBpc1xuICogaW52b2tlZCB3aXRoIHRocmVlIGFyZ3VtZW50czogKHZhbHVlLCBpbmRleCwgYXJyYXkpLlxuICpcbiAqICoqTm90ZToqKiBUaGlzIG1ldGhvZCByZXR1cm5zIGB0cnVlYCBmb3JcbiAqIFtlbXB0eSBhcnJheXNdKGh0dHBzOi8vZW4ud2lraXBlZGlhLm9yZy93aWtpL0VtcHR5X3NldCkgYmVjYXVzZVxuICogW2V2ZXJ5dGhpbmcgaXMgdHJ1ZV0oaHR0cHM6Ly9lbi53aWtpcGVkaWEub3JnL3dpa2kvVmFjdW91c190cnV0aCkgb2ZcbiAqIGVsZW1lbnRzIG9mIGVtcHR5IGFycmF5cy5cbiAqXG4gKiBAc2luY2UgNS4wLjBcbiAqIEBjYXRlZ29yeSBBcnJheVxuICogQHBhcmFtIHtBcnJheX0gYXJyYXkgVGhlIGFycmF5IHRvIGl0ZXJhdGUgb3Zlci5cbiAqIEBwYXJhbSB7RnVuY3Rpb259IHByZWRpY2F0ZSBUaGUgZnVuY3Rpb24gaW52b2tlZCBwZXIgaXRlcmF0aW9uLlxuICogQHJldHVybnMge2Jvb2xlYW59IFJldHVybnMgYHRydWVgIGlmIGFsbCBlbGVtZW50cyBwYXNzIHRoZSBwcmVkaWNhdGUgY2hlY2ssXG4gKiAgZWxzZSBgZmFsc2VgLlxuICogQGV4YW1wbGVcbiAqXG4gKiBldmVyeShbdHJ1ZSwgMSwgbnVsbCwgJ3llcyddLCBCb29sZWFuKVxuICogLy8gPT4gZmFsc2VcbiAqL1xuZnVuY3Rpb24gZXZlcnkoYXJyYXksIHByZWRpY2F0ZSkge1xuICBsZXQgaW5kZXggPSAtMVxuICBjb25zdCBsZW5ndGggPSBhcnJheSA9PSBudWxsID8gMCA6IGFycmF5Lmxlbmd0aFxuXG4gIHdoaWxlICgrK2luZGV4IDwgbGVuZ3RoKSB7XG4gICAgaWYgKCFwcmVkaWNhdGUoYXJyYXlbaW5kZXhdLCBpbmRleCwgYXJyYXkpKSB7XG4gICAgICByZXR1cm4gZmFsc2VcbiAgICB9XG4gIH1cbiAgcmV0dXJuIHRydWVcbn1cblxuZXhwb3J0IGRlZmF1bHQgZXZlcnlcbiJdLCJzb3VyY2VSb290IjoiQzovVFVUMjAxOS9Tb2Z0d2FyZVRlc3RpbmcvQ09NUC5TRS4yMDAtMjAyMS0yMDIyLTEvc3JjIn0=