{"version":3,"sources":["isDate.js"],"names":["nodeIsDate","nodeTypes","isDate","value"],"mappings":";;;;;;AAAA;;;;AACA;;;;AACA;;;;;;AAEA;AACA,IAAMA,aAAaC,uBAAaA,oBAAUC,MAA1C;;AAEA;;;;;;;;;;;;;;;AAeA,IAAMA,SAASF,aACX,UAACG,KAAD;AAAA,SAAWH,WAAWG,KAAX,CAAX;AAAA,CADW,GAEX,UAACA,KAAD;AAAA,SAAW,4BAAaA,KAAb,KAAuB,sBAAOA,KAAP,KAAiB,eAAnD;AAAA,CAFJ;;kBAIeD,M","file":"isDate.js","sourceRoot":"C:/TUT2019/SoftwareTesting/COMP.SE.200-2021-2022-1/src","sourcesContent":["import getTag from './.internal/getTag.js'\nimport isObjectLike from './isObjectLike.js'\nimport nodeTypes from './.internal/nodeTypes.js'\n\n/* Node.js helper references. */\nconst nodeIsDate = nodeTypes && nodeTypes.isDate\n\n/**\n * Checks if `value` is classified as a `Date` object.\n *\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a date object, else `false`.\n * @example\n *\n * isDate(new Date)\n * // => true\n *\n * isDate('Mon April 23 2012')\n * // => false\n */\nconst isDate = nodeIsDate\n  ? (value) => nodeIsDate(value)\n  : (value) => isObjectLike(value) && getTag(value) == '[object Date]'\n\nexport default isDate\n"]}