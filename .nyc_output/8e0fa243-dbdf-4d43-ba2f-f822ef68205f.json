{"C:\\TUT2019\\SoftwareTesting\\COMP.SE.200-2021-2022-1\\test\\src\\add.test.js":{"path":"C:\\TUT2019\\SoftwareTesting\\COMP.SE.200-2021-2022-1\\test\\src\\add.test.js","statementMap":{"0":{"start":{"line":3,"column":12},"end":{"line":3,"column":27}},"1":{"start":{"line":5,"column":11},"end":{"line":5,"column":35}},"2":{"start":{"line":7,"column":12},"end":{"line":7,"column":40}},"3":{"start":{"line":9,"column":39},"end":{"line":9,"column":93}},"4":{"start":{"line":11,"column":0},"end":{"line":18,"column":3}},"5":{"start":{"line":12,"column":2},"end":{"line":17,"column":3}},"6":{"start":{"line":12,"column":18},"end":{"line":12,"column":19}},"7":{"start":{"line":13,"column":15},"end":{"line":13,"column":46}},"8":{"start":{"line":14,"column":15},"end":{"line":14,"column":46}},"9":{"start":{"line":15,"column":17},"end":{"line":15,"column":28}},"10":{"start":{"line":16,"column":4},"end":{"line":16,"column":71}}},"fnMap":{"0":{"name":"_interopRequireDefault","decl":{"start":{"line":9,"column":9},"end":{"line":9,"column":31}},"loc":{"start":{"line":9,"column":37},"end":{"line":9,"column":95}},"line":9},"1":{"name":"(anonymous_1)","decl":{"start":{"line":11,"column":29},"end":{"line":11,"column":30}},"loc":{"start":{"line":11,"column":41},"end":{"line":18,"column":1}},"line":11}},"branchMap":{"0":{"loc":{"start":{"line":9,"column":46},"end":{"line":9,"column":92}},"type":"cond-expr","locations":[{"start":{"line":9,"column":70},"end":{"line":9,"column":73}},{"start":{"line":9,"column":76},"end":{"line":9,"column":92}}],"line":9},"1":{"loc":{"start":{"line":9,"column":46},"end":{"line":9,"column":67}},"type":"binary-expr","locations":[{"start":{"line":9,"column":46},"end":{"line":9,"column":49}},{"start":{"line":9,"column":53},"end":{"line":9,"column":67}}],"line":9}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":10,"8":10,"9":10,"10":10},"f":{"0":1,"1":1},"b":{"0":[1,0],"1":[1,1]},"inputSourceMap":{"version":3,"sources":["add.test.js"],"names":["describe","step","num1","Math","floor","random","num2","result","to","equal"],"mappings":";;AAAA;;AACA;;;;;;AAEAA,SAAS,kBAAT,EAA6B,YAAM;AACjC,OAAK,IAAIC,OAAO,CAAhB,EAAmBA,OAAO,EAA1B,EAA8BA,MAA9B,EAAsC;AACpC,QAAMC,OAAOC,KAAKC,KAAL,CAAWD,KAAKE,MAAL,KAAgB,GAA3B,CAAb;AACA,QAAMC,OAAOH,KAAKC,KAAL,CAAWD,KAAKE,MAAL,KAAgB,GAA3B,CAAb;AACA,QAAME,SAASL,OAAOI,IAAtB;AACA,sBAAO,mBAAIJ,IAAJ,EAAUI,IAAV,CAAP,EAAwBE,EAAxB,CAA2BC,KAA3B,CAAiCF,MAAjC,EAJoC,CAIM;AAC3C;AACF,CAPD","file":"add.test.js","sourceRoot":"C:/TUT2019/SoftwareTesting/COMP.SE.200-2021-2022-1/test/src","sourcesContent":["import { expect } from 'chai';\r\nimport add from '../../src/add';\r\n\r\ndescribe('add.js unit test', () => {\r\n  for (let step = 0; step < 10; step++) {\r\n    const num1 = Math.floor(Math.random() * 110);\r\n    const num2 = Math.floor(Math.random() * 110);\r\n    const result = num1 + num2;\r\n    expect(add(num1, num2)).to.equal(result); // checks for the number and compare result\r\n  }\r\n});\r\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"fc7caadcf0366c16f79a0ef136a9272ac2fcc421","contentHash":"d29d2b78c52b5b2db5248510e39e7b94044d1a6e9b5b8a6f139b746af8a86d23"},"C:\\TUT2019\\SoftwareTesting\\COMP.SE.200-2021-2022-1\\src\\add.js":{"path":"C:\\TUT2019\\SoftwareTesting\\COMP.SE.200-2021-2022-1\\src\\add.js","statementMap":{"0":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"1":{"start":{"line":7,"column":27},"end":{"line":7,"column":72}},"2":{"start":{"line":9,"column":28},"end":{"line":9,"column":72}},"3":{"start":{"line":11,"column":39},"end":{"line":11,"column":93}},"4":{"start":{"line":26,"column":10},"end":{"line":28,"column":5}},"5":{"start":{"line":27,"column":2},"end":{"line":27,"column":25}},"6":{"start":{"line":30,"column":0},"end":{"line":30,"column":22}}},"fnMap":{"0":{"name":"_interopRequireDefault","decl":{"start":{"line":11,"column":9},"end":{"line":11,"column":31}},"loc":{"start":{"line":11,"column":37},"end":{"line":11,"column":95}},"line":11},"1":{"name":"(anonymous_1)","decl":{"start":{"line":26,"column":45},"end":{"line":26,"column":46}},"loc":{"start":{"line":26,"column":71},"end":{"line":28,"column":1}},"line":26}},"branchMap":{"0":{"loc":{"start":{"line":11,"column":46},"end":{"line":11,"column":92}},"type":"cond-expr","locations":[{"start":{"line":11,"column":70},"end":{"line":11,"column":73}},{"start":{"line":11,"column":76},"end":{"line":11,"column":92}}],"line":11},"1":{"loc":{"start":{"line":11,"column":46},"end":{"line":11,"column":67}},"type":"binary-expr","locations":[{"start":{"line":11,"column":46},"end":{"line":11,"column":49}},{"start":{"line":11,"column":53},"end":{"line":11,"column":67}}],"line":11}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":10,"6":1},"f":{"0":1,"1":10},"b":{"0":[1,0],"1":[1,1]},"inputSourceMap":{"version":3,"sources":["add.js"],"names":["add","augend","addend"],"mappings":";;;;;;AAAA;;;;;;AAEA;;;;;;;;;;;;;AAaA,IAAMA,MAAM,mCAAoB,UAACC,MAAD,EAASC,MAAT;AAAA,SAAoBD,SAASC,MAA7B;AAAA,CAApB,EAAyD,CAAzD,CAAZ;;kBAEeF,G","file":"add.js","sourceRoot":"C:/TUT2019/SoftwareTesting/COMP.SE.200-2021-2022-1/src","sourcesContent":["import createMathOperation from './.internal/createMathOperation.js'\n\n/**\n * Adds two numbers.\n *\n * @since 3.4.0\n * @category Math\n * @param {number} augend The first number in an addition.\n * @param {number} addend The second number in an addition.\n * @returns {number} Returns the total.\n * @example\n *\n * add(6, 4)\n * // => 10\n */\nconst add = createMathOperation((augend, addend) => augend + addend, 0)\n\nexport default add\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"1fa2be266bfe43b4829efc0e55d20bf229928d40","contentHash":"9976b4be43e61bf50035e70866a60f3a8186dbe59517e1ced1a72bdd383c0557"},"C:\\TUT2019\\SoftwareTesting\\COMP.SE.200-2021-2022-1\\src\\isSymbol.js":{"path":"C:\\TUT2019\\SoftwareTesting\\COMP.SE.200-2021-2022-1\\src\\isSymbol.js","statementMap":{"0":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"1":{"start":{"line":7,"column":14},"end":{"line":7,"column":268}},"2":{"start":{"line":7,"column":101},"end":{"line":7,"column":119}},"3":{"start":{"line":7,"column":141},"end":{"line":7,"column":266}},"4":{"start":{"line":9,"column":14},"end":{"line":9,"column":46}},"5":{"start":{"line":11,"column":15},"end":{"line":11,"column":46}},"6":{"start":{"line":13,"column":39},"end":{"line":13,"column":93}},"7":{"start":{"line":31,"column":13},"end":{"line":31,"column":72}},"8":{"start":{"line":32,"column":2},"end":{"line":32,"column":117}},"9":{"start":{"line":35,"column":0},"end":{"line":35,"column":27}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":7,"column":84},"end":{"line":7,"column":85}},"loc":{"start":{"line":7,"column":99},"end":{"line":7,"column":121}},"line":7},"1":{"name":"(anonymous_1)","decl":{"start":{"line":7,"column":124},"end":{"line":7,"column":125}},"loc":{"start":{"line":7,"column":139},"end":{"line":7,"column":268}},"line":7},"2":{"name":"_interopRequireDefault","decl":{"start":{"line":13,"column":9},"end":{"line":13,"column":31}},"loc":{"start":{"line":13,"column":37},"end":{"line":13,"column":95}},"line":13},"3":{"name":"isSymbol","decl":{"start":{"line":30,"column":9},"end":{"line":30,"column":17}},"loc":{"start":{"line":30,"column":25},"end":{"line":33,"column":1}},"line":30}},"branchMap":{"0":{"loc":{"start":{"line":7,"column":14},"end":{"line":7,"column":268}},"type":"cond-expr","locations":[{"start":{"line":7,"column":84},"end":{"line":7,"column":121}},{"start":{"line":7,"column":124},"end":{"line":7,"column":268}}],"line":7},"1":{"loc":{"start":{"line":7,"column":14},"end":{"line":7,"column":81}},"type":"binary-expr","locations":[{"start":{"line":7,"column":14},"end":{"line":7,"column":42}},{"start":{"line":7,"column":46},"end":{"line":7,"column":81}}],"line":7},"2":{"loc":{"start":{"line":7,"column":148},"end":{"line":7,"column":265}},"type":"cond-expr","locations":[{"start":{"line":7,"column":244},"end":{"line":7,"column":252}},{"start":{"line":7,"column":255},"end":{"line":7,"column":265}}],"line":7},"3":{"loc":{"start":{"line":7,"column":148},"end":{"line":7,"column":241}},"type":"binary-expr","locations":[{"start":{"line":7,"column":148},"end":{"line":7,"column":151}},{"start":{"line":7,"column":155},"end":{"line":7,"column":183}},{"start":{"line":7,"column":187},"end":{"line":7,"column":213}},{"start":{"line":7,"column":217},"end":{"line":7,"column":241}}],"line":7},"4":{"loc":{"start":{"line":13,"column":46},"end":{"line":13,"column":92}},"type":"cond-expr","locations":[{"start":{"line":13,"column":70},"end":{"line":13,"column":73}},{"start":{"line":13,"column":76},"end":{"line":13,"column":92}}],"line":13},"5":{"loc":{"start":{"line":13,"column":46},"end":{"line":13,"column":67}},"type":"binary-expr","locations":[{"start":{"line":13,"column":46},"end":{"line":13,"column":49}},{"start":{"line":13,"column":53},"end":{"line":13,"column":67}}],"line":13},"6":{"loc":{"start":{"line":31,"column":13},"end":{"line":31,"column":72}},"type":"cond-expr","locations":[{"start":{"line":31,"column":44},"end":{"line":31,"column":55}},{"start":{"line":31,"column":58},"end":{"line":31,"column":72}}],"line":31},"7":{"loc":{"start":{"line":32,"column":9},"end":{"line":32,"column":116}},"type":"binary-expr","locations":[{"start":{"line":32,"column":9},"end":{"line":32,"column":25}},{"start":{"line":32,"column":29},"end":{"line":32,"column":46}},{"start":{"line":32,"column":50},"end":{"line":32,"column":63}},{"start":{"line":32,"column":67},"end":{"line":32,"column":116}}],"line":32}},"s":{"0":1,"1":1,"2":2,"3":0,"4":1,"5":1,"6":1,"7":2,"8":2,"9":1},"f":{"0":2,"1":0,"2":1,"3":2},"b":{"0":[1,0],"1":[1,1],"2":[0,0],"3":[0,0,0,0],"4":[1,0],"5":[1,1],"6":[0,2],"7":[2,1,0,0]},"inputSourceMap":{"version":3,"sources":["isSymbol.js"],"names":["isSymbol","value","type"],"mappings":";;;;;;;;AAAA;;;;;;AAEA;;;;;;;;;;;;;;;AAeA,SAASA,QAAT,CAAkBC,KAAlB,EAAyB;AACvB,MAAMC,cAAcD,KAAd,yCAAcA,KAAd,CAAN;AACA,SAAOC,QAAQ,QAAR,IAAqBA,SAAS,QAAT,IAAqBD,SAAS,IAA9B,IAAsC,sBAAOA,KAAP,KAAiB,iBAAnF;AACD;;kBAEcD,Q","file":"isSymbol.js","sourceRoot":"C:/TUT2019/SoftwareTesting/COMP.SE.200-2021-2022-1/src","sourcesContent":["import getTag from './.internal/getTag.js'\n\n/**\n * Checks if `value` is classified as a `Symbol` primitive or object.\n *\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n * @example\n *\n * isSymbol(Symbol.iterator)\n * // => true\n *\n * isSymbol('abc')\n * // => false\n */\nfunction isSymbol(value) {\n  const type = typeof value\n  return type == 'symbol' || (type === 'object' && value != null && getTag(value) == '[object Symbol]')\n}\n\nexport default isSymbol\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"20eeaf06079fb28d2277394ca7dd77b7362001ea","contentHash":"a0c64b7f793f02120dee9b9c7dda338e92f91e293a337429657eb918ce8a18fa"},"C:\\TUT2019\\SoftwareTesting\\COMP.SE.200-2021-2022-1\\test\\src\\defaultTo.test.js":{"path":"C:\\TUT2019\\SoftwareTesting\\COMP.SE.200-2021-2022-1\\test\\src\\defaultTo.test.js","statementMap":{"0":{"start":{"line":3,"column":12},"end":{"line":3,"column":27}},"1":{"start":{"line":5,"column":17},"end":{"line":5,"column":49}},"2":{"start":{"line":7,"column":18},"end":{"line":7,"column":52}},"3":{"start":{"line":9,"column":39},"end":{"line":9,"column":93}},"4":{"start":{"line":11,"column":0},"end":{"line":20,"column":3}},"5":{"start":{"line":12,"column":2},"end":{"line":15,"column":5}},"6":{"start":{"line":13,"column":17},"end":{"line":13,"column":48}},"7":{"start":{"line":14,"column":4},"end":{"line":14,"column":42}},"8":{"start":{"line":16,"column":2},"end":{"line":19,"column":5}},"9":{"start":{"line":17,"column":18},"end":{"line":17,"column":46}},"10":{"start":{"line":18,"column":4},"end":{"line":18,"column":44}}},"fnMap":{"0":{"name":"_interopRequireDefault","decl":{"start":{"line":9,"column":9},"end":{"line":9,"column":31}},"loc":{"start":{"line":9,"column":37},"end":{"line":9,"column":95}},"line":9},"1":{"name":"(anonymous_1)","decl":{"start":{"line":11,"column":35},"end":{"line":11,"column":36}},"loc":{"start":{"line":11,"column":47},"end":{"line":20,"column":1}},"line":11},"2":{"name":"(anonymous_2)","decl":{"start":{"line":12,"column":21},"end":{"line":12,"column":22}},"loc":{"start":{"line":12,"column":33},"end":{"line":15,"column":3}},"line":12},"3":{"name":"(anonymous_3)","decl":{"start":{"line":16,"column":14},"end":{"line":16,"column":15}},"loc":{"start":{"line":16,"column":26},"end":{"line":19,"column":3}},"line":16}},"branchMap":{"0":{"loc":{"start":{"line":9,"column":46},"end":{"line":9,"column":92}},"type":"cond-expr","locations":[{"start":{"line":9,"column":70},"end":{"line":9,"column":73}},{"start":{"line":9,"column":76},"end":{"line":9,"column":92}}],"line":9},"1":{"loc":{"start":{"line":9,"column":46},"end":{"line":9,"column":67}},"type":"binary-expr","locations":[{"start":{"line":9,"column":46},"end":{"line":9,"column":49}},{"start":{"line":9,"column":53},"end":{"line":9,"column":67}}],"line":9}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1},"f":{"0":1,"1":1,"2":1,"3":1},"b":{"0":[1,0],"1":[1,1]},"inputSourceMap":{"version":3,"sources":["defaultTo.test.js"],"names":["describe","it","result","to","equal","result1"],"mappings":";;AAAA;;AACA;;;;;;AAEAA,SAAS,wBAAT,EAAmC,YAAM;AACvCC,KAAG,cAAH,EAAmB,YAAY;AAC7B,QAAMC,SAAS,yBAAU,CAAV,EAAa,EAAb,CAAf;AACA,sBAAOA,MAAP,EAAeC,EAAf,CAAkBC,KAAlB,CAAwB,CAAxB;AACD,GAHD;AAIAH,KAAG,OAAH,EAAY,YAAY;AACtB,QAAMI,UAAU,yBAAU,EAAV,CAAhB;AACA,sBAAOA,OAAP,EAAgBF,EAAhB,CAAmBC,KAAnB,CAAyB,EAAzB;AACD,GAHD;AAID,CATD","file":"defaultTo.test.js","sourceRoot":"C:/TUT2019/SoftwareTesting/COMP.SE.200-2021-2022-1/test/src","sourcesContent":["import { expect } from 'chai';\r\nimport defaultTo from './../../src/defaultTo';\r\n\r\ndescribe('defaultTo.js unit test', () => {\r\n  it('normal cases', function () {\r\n    const result = defaultTo(1, 10);\r\n    expect(result).to.equal(1);\r\n  });\r\n  it('false', function () {\r\n    const result1 = defaultTo(10);\r\n    expect(result1).to.equal(10);\r\n  });\r\n});\r\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"006d8e40a2e225e78f8789af59706d7033f2d5eb","contentHash":"06c9ceb7498241f50d458b98c8e2cefcdf650dcc1ba8860f28466789e9c47969"},"C:\\TUT2019\\SoftwareTesting\\COMP.SE.200-2021-2022-1\\src\\defaultTo.js":{"path":"C:\\TUT2019\\SoftwareTesting\\COMP.SE.200-2021-2022-1\\src\\defaultTo.js","statementMap":{"0":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"1":{"start":{"line":25,"column":2},"end":{"line":25,"column":46}},"2":{"start":{"line":28,"column":0},"end":{"line":28,"column":28}}},"fnMap":{"0":{"name":"defaultTo","decl":{"start":{"line":24,"column":9},"end":{"line":24,"column":18}},"loc":{"start":{"line":24,"column":40},"end":{"line":26,"column":1}},"line":24}},"branchMap":{"0":{"loc":{"start":{"line":25,"column":9},"end":{"line":25,"column":45}},"type":"cond-expr","locations":[{"start":{"line":25,"column":25},"end":{"line":25,"column":37}},{"start":{"line":25,"column":40},"end":{"line":25,"column":45}}],"line":25}},"s":{"0":1,"1":2,"2":1},"f":{"0":2},"b":{"0":[0,2]},"inputSourceMap":{"version":3,"sources":["defaultTo.js"],"names":["defaultTo","value","defaultValue"],"mappings":";;;;;AAAA;;;;;;;;;;;;;;;;;;AAkBA,SAASA,SAAT,CAAmBC,KAAnB,EAA0BC,YAA1B,EAAwC;AACtC,SAAOD,SAAS,IAAT,GAAgBC,YAAhB,GAA+BD,KAAtC;AACD;;kBAEcD,S","file":"defaultTo.js","sourceRoot":"C:/TUT2019/SoftwareTesting/COMP.SE.200-2021-2022-1/src","sourcesContent":["/**\n * Checks `value` to determine whether a default value should be returned in\n * its place. The `defaultValue` is returned if `value` is `NaN`, `null`,\n * or `undefined`.\n *\n * @since 4.14.0\n * @category Util\n * @param {*} value The value to check.\n * @param {*} defaultValue The default value.\n * @returns {*} Returns the resolved value.\n * @example\n *\n * defaultTo(1, 10)\n * // => 1\n *\n * defaultTo(undefined, 10)\n * // => 10\n */\nfunction defaultTo(value, defaultValue) {\n  return value == null ? defaultValue : value\n}\n\nexport default defaultTo\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"52dd44db986e4464a2b239e58157d7425d12794c","contentHash":"5c164c71b6157acc489fb190375b82f92ac364b9b8c4e278b64b77808c692813"},"C:\\TUT2019\\SoftwareTesting\\COMP.SE.200-2021-2022-1\\test\\src\\endsWith.test.js":{"path":"C:\\TUT2019\\SoftwareTesting\\COMP.SE.200-2021-2022-1\\test\\src\\endsWith.test.js","statementMap":{"0":{"start":{"line":3,"column":12},"end":{"line":3,"column":27}},"1":{"start":{"line":5,"column":16},"end":{"line":5,"column":47}},"2":{"start":{"line":7,"column":17},"end":{"line":7,"column":50}},"3":{"start":{"line":9,"column":39},"end":{"line":9,"column":93}},"4":{"start":{"line":11,"column":0},"end":{"line":28,"column":3}},"5":{"start":{"line":12,"column":2},"end":{"line":15,"column":5}},"6":{"start":{"line":13,"column":17},"end":{"line":13,"column":52}},"7":{"start":{"line":14,"column":4},"end":{"line":14,"column":45}},"8":{"start":{"line":16,"column":2},"end":{"line":19,"column":5}},"9":{"start":{"line":17,"column":17},"end":{"line":17,"column":56}},"10":{"start":{"line":18,"column":4},"end":{"line":18,"column":46}},"11":{"start":{"line":20,"column":2},"end":{"line":23,"column":5}},"12":{"start":{"line":21,"column":17},"end":{"line":21,"column":55}},"13":{"start":{"line":22,"column":4},"end":{"line":22,"column":50}},"14":{"start":{"line":24,"column":2},"end":{"line":27,"column":5}},"15":{"start":{"line":25,"column":17},"end":{"line":25,"column":55}},"16":{"start":{"line":26,"column":4},"end":{"line":26,"column":51}}},"fnMap":{"0":{"name":"_interopRequireDefault","decl":{"start":{"line":9,"column":9},"end":{"line":9,"column":31}},"loc":{"start":{"line":9,"column":37},"end":{"line":9,"column":95}},"line":9},"1":{"name":"(anonymous_1)","decl":{"start":{"line":11,"column":34},"end":{"line":11,"column":35}},"loc":{"start":{"line":11,"column":46},"end":{"line":28,"column":1}},"line":11},"2":{"name":"(anonymous_2)","decl":{"start":{"line":12,"column":28},"end":{"line":12,"column":29}},"loc":{"start":{"line":12,"column":40},"end":{"line":15,"column":3}},"line":12},"3":{"name":"(anonymous_3)","decl":{"start":{"line":16,"column":36},"end":{"line":16,"column":37}},"loc":{"start":{"line":16,"column":48},"end":{"line":19,"column":3}},"line":16},"4":{"name":"(anonymous_4)","decl":{"start":{"line":20,"column":34},"end":{"line":20,"column":35}},"loc":{"start":{"line":20,"column":46},"end":{"line":23,"column":3}},"line":20},"5":{"name":"(anonymous_5)","decl":{"start":{"line":24,"column":48},"end":{"line":24,"column":49}},"loc":{"start":{"line":24,"column":60},"end":{"line":27,"column":3}},"line":24}},"branchMap":{"0":{"loc":{"start":{"line":9,"column":46},"end":{"line":9,"column":92}},"type":"cond-expr","locations":[{"start":{"line":9,"column":70},"end":{"line":9,"column":73}},{"start":{"line":9,"column":76},"end":{"line":9,"column":92}}],"line":9},"1":{"loc":{"start":{"line":9,"column":46},"end":{"line":9,"column":67}},"type":"binary-expr","locations":[{"start":{"line":9,"column":46},"end":{"line":9,"column":49}},{"start":{"line":9,"column":53},"end":{"line":9,"column":67}}],"line":9}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":1,"15":1,"16":1},"f":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1},"b":{"0":[1,0],"1":[1,1]},"inputSourceMap":{"version":3,"sources":["endsWith.test.js"],"names":["describe","it","result","to","equal","deep"],"mappings":";;AAAA;;AACA;;;;;;AAEAA,SAAS,uBAAT,EAAkC,YAAM;AACtCC,KAAG,qBAAH,EAA0B,YAAY;AACpC,QAAMC,SAAS,wBAAS,KAAT,EAAgB,GAAhB,CAAf;AACA,sBAAOA,MAAP,EAAeC,EAAf,CAAkBC,KAAlB,CAAwB,IAAxB;AACD,GAHD;AAIAH,KAAG,6BAAH,EAAkC,YAAY;AAC5C,QAAMC,SAAS,wBAAS,KAAT,EAAgB,GAAhB,EAAqB,CAAC,CAAtB,CAAf;AACA,sBAAOA,MAAP,EAAeC,EAAf,CAAkBC,KAAlB,CAAwB,KAAxB;AACD,GAHD;AAIAH,KAAG,2BAAH,EAAgC,YAAY;AAC1C,QAAMC,SAAS,wBAAS,KAAT,EAAgB,GAAhB,EAAqB,CAArB,CAAf;AACA,sBAAOA,MAAP,EAAeC,EAAf,CAAkBE,IAAlB,CAAuBD,KAAvB,CAA6B,IAA7B;AACD,GAHD;AAIAH,KAAG,yCAAH,EAA8C,YAAY;AACxD,QAAMC,SAAS,wBAAS,KAAT,EAAgB,GAAhB,EAAqB,CAArB,CAAf;AACA,sBAAOA,MAAP,EAAeC,EAAf,CAAkBE,IAAlB,CAAuBD,KAAvB,CAA6B,KAA7B;AACD,GAHD;AAID,CAjBD","file":"endsWith.test.js","sourceRoot":"C:/TUT2019/SoftwareTesting/COMP.SE.200-2021-2022-1/test/src","sourcesContent":["import { expect } from 'chai';\r\nimport endsWith from './../../src/endsWith';\r\n\r\ndescribe('endsWith.js unit test', () => {\r\n  it('Check element index', function () {\r\n    const result = endsWith('abc', 'c');\r\n    expect(result).to.equal(true);\r\n  });\r\n  it('Check an element false case', function () {\r\n    const result = endsWith('abc', 'a', -1);\r\n    expect(result).to.equal(false);\r\n  });\r\n  it('Check element index index', function () {\r\n    const result = endsWith('abc', 'a', 1);\r\n    expect(result).to.deep.equal(true);\r\n  });\r\n  it('Check an element  index > string length', function () {\r\n    const result = endsWith('abc', 'a', 7);\r\n    expect(result).to.deep.equal(false);\r\n  });\r\n});\r\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"b728c7da2dd05b5ed785227a5e8039844eae312e","contentHash":"bbbe5d93019f8a4d3a78dce9be68e47d0c20f63433b2a9b55deee2c50143d0ae"},"C:\\TUT2019\\SoftwareTesting\\COMP.SE.200-2021-2022-1\\src\\endsWith.js":{"path":"C:\\TUT2019\\SoftwareTesting\\COMP.SE.200-2021-2022-1\\src\\endsWith.js","statementMap":{"0":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"1":{"start":{"line":29,"column":15},"end":{"line":29,"column":28}},"2":{"start":{"line":31,"column":2},"end":{"line":31,"column":57}},"3":{"start":{"line":32,"column":2},"end":{"line":36,"column":3}},"4":{"start":{"line":33,"column":4},"end":{"line":33,"column":17}},"5":{"start":{"line":34,"column":9},"end":{"line":36,"column":3}},"6":{"start":{"line":35,"column":4},"end":{"line":35,"column":22}},"7":{"start":{"line":37,"column":12},"end":{"line":37,"column":20}},"8":{"start":{"line":38,"column":2},"end":{"line":38,"column":28}},"9":{"start":{"line":39,"column":2},"end":{"line":39,"column":64}},"10":{"start":{"line":42,"column":0},"end":{"line":42,"column":27}}},"fnMap":{"0":{"name":"endsWith","decl":{"start":{"line":28,"column":9},"end":{"line":28,"column":17}},"loc":{"start":{"line":28,"column":44},"end":{"line":40,"column":1}},"line":28}},"branchMap":{"0":{"loc":{"start":{"line":31,"column":13},"end":{"line":31,"column":56}},"type":"cond-expr","locations":[{"start":{"line":31,"column":38},"end":{"line":31,"column":44}},{"start":{"line":31,"column":47},"end":{"line":31,"column":56}}],"line":31},"1":{"loc":{"start":{"line":32,"column":2},"end":{"line":36,"column":3}},"type":"if","locations":[{"start":{"line":32,"column":2},"end":{"line":36,"column":3}},{"start":{"line":32,"column":2},"end":{"line":36,"column":3}}],"line":32},"2":{"loc":{"start":{"line":32,"column":6},"end":{"line":32,"column":42}},"type":"binary-expr","locations":[{"start":{"line":32,"column":6},"end":{"line":32,"column":18}},{"start":{"line":32,"column":22},"end":{"line":32,"column":42}}],"line":32},"3":{"loc":{"start":{"line":34,"column":9},"end":{"line":36,"column":3}},"type":"if","locations":[{"start":{"line":34,"column":9},"end":{"line":36,"column":3}},{"start":{"line":34,"column":9},"end":{"line":36,"column":3}}],"line":34},"4":{"loc":{"start":{"line":39,"column":9},"end":{"line":39,"column":63}},"type":"binary-expr","locations":[{"start":{"line":39,"column":9},"end":{"line":39,"column":22}},{"start":{"line":39,"column":26},"end":{"line":39,"column":63}}],"line":39}},"s":{"0":1,"1":4,"2":4,"3":4,"4":1,"5":3,"6":1,"7":4,"8":4,"9":4,"10":1},"f":{"0":4},"b":{"0":[1,3],"1":[1,3],"2":[4,3],"3":[1,2],"4":[4,3]},"inputSourceMap":{"version":3,"sources":["endsWith.js"],"names":["endsWith","string","target","position","length","undefined","end","slice"],"mappings":";;;;;AAAA;;;;;;;;;;;;;;;;;;;;;;AAsBA,SAASA,QAAT,CAAkBC,MAAlB,EAA0BC,MAA1B,EAAkCC,QAAlC,EAA4C;AAAA,MAClCC,MADkC,GACvBH,MADuB,CAClCG,MADkC;;AAE1CD,aAAWA,aAAaE,SAAb,GAAyBD,MAAzB,GAAkC,CAACD,QAA9C;AACA,MAAIA,WAAW,CAAX,IAAgBA,YAAYA,QAAhC,EAA0C;AACxCA,eAAW,CAAX;AACD,GAFD,MAGK,IAAIA,WAAWC,MAAf,EAAuB;AAC1BD,eAAWC,MAAX;AACD;AACD,MAAME,MAAMH,QAAZ;AACAA,cAAYD,OAAOE,MAAnB;AACA,SAAOD,YAAY,CAAZ,IAAiBF,OAAOM,KAAP,CAAaJ,QAAb,EAAuBG,GAAvB,KAA+BJ,MAAvD;AACD;;kBAEcF,Q","file":"endsWith.js","sourceRoot":"C:/TUT2019/SoftwareTesting/COMP.SE.200-2021-2022-1/src","sourcesContent":["/**\n * Checks if `string` ends with the given target string.\n *\n * @since 3.0.0\n * @category String\n * @param {string} [string=''] The string to inspect.\n * @param {string} [target] The string to search for.\n * @param {number} [position=string.length] The position to search up to.\n * @returns {boolean} Returns `true` if `string` ends with `target`,\n *  else `false`.\n * @see includes, startsWith\n * @example\n *\n * endsWith('abc', 'c')\n * // => true\n *\n * endsWith('abc', 'b')\n * // => false\n *\n * endsWith('abc', 'b', 2)\n * // => true\n */\nfunction endsWith(string, target, position) {\n  const { length } = string\n  position = position === undefined ? length : +position\n  if (position < 0 || position != position) {\n    position = 0\n  }\n  else if (position > length) {\n    position = length\n  }\n  const end = position\n  position -= target.length\n  return position >= 0 && string.slice(position, end) == target\n}\n\nexport default endsWith\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"de3ca8b61b5411f42622de9face2145399286873","contentHash":"10d42cdd351d74df62e417cfa0f671e8641eee03132b837ac2a5e09a862af89f"},"C:\\TUT2019\\SoftwareTesting\\COMP.SE.200-2021-2022-1\\test\\src\\every.test.js":{"path":"C:\\TUT2019\\SoftwareTesting\\COMP.SE.200-2021-2022-1\\test\\src\\every.test.js","statementMap":{"0":{"start":{"line":3,"column":12},"end":{"line":3,"column":27}},"1":{"start":{"line":5,"column":13},"end":{"line":5,"column":41}},"2":{"start":{"line":7,"column":14},"end":{"line":7,"column":44}},"3":{"start":{"line":9,"column":39},"end":{"line":9,"column":93}},"4":{"start":{"line":11,"column":13},"end":{"line":11,"column":30}},"5":{"start":{"line":14,"column":0},"end":{"line":27,"column":3}},"6":{"start":{"line":15,"column":2},"end":{"line":18,"column":5}},"7":{"start":{"line":16,"column":17},"end":{"line":16,"column":70}},"8":{"start":{"line":17,"column":4},"end":{"line":17,"column":32}},"9":{"start":{"line":19,"column":2},"end":{"line":22,"column":5}},"10":{"start":{"line":20,"column":17},"end":{"line":20,"column":50}},"11":{"start":{"line":21,"column":4},"end":{"line":21,"column":31}},"12":{"start":{"line":23,"column":2},"end":{"line":26,"column":5}},"13":{"start":{"line":24,"column":17},"end":{"line":24,"column":60}},"14":{"start":{"line":25,"column":4},"end":{"line":25,"column":31}}},"fnMap":{"0":{"name":"_interopRequireDefault","decl":{"start":{"line":9,"column":9},"end":{"line":9,"column":31}},"loc":{"start":{"line":9,"column":37},"end":{"line":9,"column":95}},"line":9},"1":{"name":"(anonymous_1)","decl":{"start":{"line":14,"column":31},"end":{"line":14,"column":32}},"loc":{"start":{"line":14,"column":43},"end":{"line":27,"column":1}},"line":14},"2":{"name":"(anonymous_2)","decl":{"start":{"line":15,"column":22},"end":{"line":15,"column":23}},"loc":{"start":{"line":15,"column":34},"end":{"line":18,"column":3}},"line":15},"3":{"name":"(anonymous_3)","decl":{"start":{"line":19,"column":32},"end":{"line":19,"column":33}},"loc":{"start":{"line":19,"column":44},"end":{"line":22,"column":3}},"line":19},"4":{"name":"(anonymous_4)","decl":{"start":{"line":23,"column":31},"end":{"line":23,"column":32}},"loc":{"start":{"line":23,"column":43},"end":{"line":26,"column":3}},"line":23}},"branchMap":{"0":{"loc":{"start":{"line":9,"column":46},"end":{"line":9,"column":92}},"type":"cond-expr","locations":[{"start":{"line":9,"column":70},"end":{"line":9,"column":73}},{"start":{"line":9,"column":76},"end":{"line":9,"column":92}}],"line":9},"1":{"loc":{"start":{"line":9,"column":46},"end":{"line":9,"column":67}},"type":"binary-expr","locations":[{"start":{"line":9,"column":46},"end":{"line":9,"column":49}},{"start":{"line":9,"column":53},"end":{"line":9,"column":67}}],"line":9}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":1},"f":{"0":1,"1":1,"2":1,"3":1,"4":1},"b":{"0":[1,0],"1":[1,1]},"inputSourceMap":{"version":3,"sources":["every.test.js"],"names":["assert","require","describe","it","result","Boolean","equal"],"mappings":";;AAAA;;AAEA;;;;;;AADA,IAAMA,SAASC,QAAQ,QAAR,CAAf;;;AAGAC,SAAS,oBAAT,EAA+B,YAAM;AACnCC,KAAG,eAAH,EAAoB,YAAY;AAC9B,QAAMC,SAAS,qBAAM,CAAC,IAAD,EAAO,CAAP,EAAU,IAAV,EAAgB,KAAhB,CAAN,EAA8BC,OAA9B,CAAf;AACAL,WAAOM,KAAP,CAAaF,MAAb,EAAqB,KAArB;AACD,GAHD;AAIAD,KAAG,yBAAH,EAA8B,YAAY;AACxC,QAAMC,SAAS,qBAAM,EAAN,EAAUC,OAAV,CAAf;AACAL,WAAOM,KAAP,CAAaF,MAAb,EAAqB,IAArB;AACD,GAHD;AAIAD,KAAG,wBAAH,EAA6B,YAAY;AACvC,QAAMC,SAAS,qBAAM,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,CAAN,EAAoBC,OAApB,CAAf;AACAL,WAAOM,KAAP,CAAaF,MAAb,EAAqB,IAArB;AACD,GAHD;AAID,CAbD","file":"every.test.js","sourceRoot":"C:/TUT2019/SoftwareTesting/COMP.SE.200-2021-2022-1/test/src","sourcesContent":["import { expect } from 'chai';\r\nconst assert = require('assert');\r\nimport every from './../../src/every';\r\n\r\ndescribe('every.js unit test', () => {\r\n  it('Checking type', function () {\r\n    const result = every([true, 1, null, 'yes'], Boolean);\r\n    assert.equal(result, false);\r\n  });\r\n  it('Checking empty elements', function () {\r\n    const result = every([], Boolean);\r\n    assert.equal(result, true);\r\n  });\r\n  it('Checking true elements', function () {\r\n    const result = every([1, 2, 3, 4], Boolean);\r\n    assert.equal(result, true);\r\n  });\r\n});\r\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"7ff0ce23e60cb56ca6816f09437bd42de968bcdc","contentHash":"208b1bdd6b2e2c10ad7504ac209683ef3e5e0cb109c20333bbadc6e411007163"},"C:\\TUT2019\\SoftwareTesting\\COMP.SE.200-2021-2022-1\\src\\every.js":{"path":"C:\\TUT2019\\SoftwareTesting\\COMP.SE.200-2021-2022-1\\src\\every.js","statementMap":{"0":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"1":{"start":{"line":28,"column":14},"end":{"line":28,"column":16}},"2":{"start":{"line":29,"column":15},"end":{"line":29,"column":47}},"3":{"start":{"line":31,"column":2},"end":{"line":35,"column":3}},"4":{"start":{"line":32,"column":4},"end":{"line":34,"column":5}},"5":{"start":{"line":33,"column":6},"end":{"line":33,"column":19}},"6":{"start":{"line":36,"column":2},"end":{"line":36,"column":14}},"7":{"start":{"line":39,"column":0},"end":{"line":39,"column":24}}},"fnMap":{"0":{"name":"every","decl":{"start":{"line":27,"column":9},"end":{"line":27,"column":14}},"loc":{"start":{"line":27,"column":33},"end":{"line":37,"column":1}},"line":27}},"branchMap":{"0":{"loc":{"start":{"line":29,"column":15},"end":{"line":29,"column":47}},"type":"cond-expr","locations":[{"start":{"line":29,"column":31},"end":{"line":29,"column":32}},{"start":{"line":29,"column":35},"end":{"line":29,"column":47}}],"line":29},"1":{"loc":{"start":{"line":32,"column":4},"end":{"line":34,"column":5}},"type":"if","locations":[{"start":{"line":32,"column":4},"end":{"line":34,"column":5}},{"start":{"line":32,"column":4},"end":{"line":34,"column":5}}],"line":32}},"s":{"0":1,"1":3,"2":3,"3":3,"4":7,"5":1,"6":2,"7":1},"f":{"0":3},"b":{"0":[0,3],"1":[1,6]},"inputSourceMap":{"version":3,"sources":["every.js"],"names":["every","array","predicate","index","length"],"mappings":";;;;;AAAA;;;;;;;;;;;;;;;;;;;;;AAqBA,SAASA,KAAT,CAAeC,KAAf,EAAsBC,SAAtB,EAAiC;AAC/B,MAAIC,QAAQ,CAAC,CAAb;AACA,MAAMC,SAASH,SAAS,IAAT,GAAgB,CAAhB,GAAoBA,MAAMG,MAAzC;;AAEA,SAAO,EAAED,KAAF,GAAUC,MAAjB,EAAyB;AACvB,QAAI,CAACF,UAAUD,MAAME,KAAN,CAAV,EAAwBA,KAAxB,EAA+BF,KAA/B,CAAL,EAA4C;AAC1C,aAAO,KAAP;AACD;AACF;AACD,SAAO,IAAP;AACD;;kBAEcD,K","file":"every.js","sourceRoot":"C:/TUT2019/SoftwareTesting/COMP.SE.200-2021-2022-1/src","sourcesContent":["/**\n * Checks if `predicate` returns truthy for **all** elements of `array`.\n * Iteration is stopped once `predicate` returns falsey. The predicate is\n * invoked with three arguments: (value, index, array).\n *\n * **Note:** This method returns `true` for\n * [empty arrays](https://en.wikipedia.org/wiki/Empty_set) because\n * [everything is true](https://en.wikipedia.org/wiki/Vacuous_truth) of\n * elements of empty arrays.\n *\n * @since 5.0.0\n * @category Array\n * @param {Array} array The array to iterate over.\n * @param {Function} predicate The function invoked per iteration.\n * @returns {boolean} Returns `true` if all elements pass the predicate check,\n *  else `false`.\n * @example\n *\n * every([true, 1, null, 'yes'], Boolean)\n * // => false\n */\nfunction every(array, predicate) {\n  let index = -1\n  const length = array == null ? 0 : array.length\n\n  while (++index < length) {\n    if (!predicate(array[index], index, array)) {\n      return false\n    }\n  }\n  return true\n}\n\nexport default every\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"0b90ae83bfe3aea5433066cc0c19856d2671b804","contentHash":"e46861077c4915655656b8656a92c6d1bfa822da519aa8fe20cc67d17d523e23"},"C:\\TUT2019\\SoftwareTesting\\COMP.SE.200-2021-2022-1\\test\\src\\filter.test.js":{"path":"C:\\TUT2019\\SoftwareTesting\\COMP.SE.200-2021-2022-1\\test\\src\\filter.test.js","statementMap":{"0":{"start":{"line":3,"column":12},"end":{"line":3,"column":27}},"1":{"start":{"line":5,"column":14},"end":{"line":5,"column":43}},"2":{"start":{"line":7,"column":15},"end":{"line":7,"column":46}},"3":{"start":{"line":9,"column":39},"end":{"line":9,"column":93}},"4":{"start":{"line":11,"column":12},"end":{"line":11,"column":76}},"5":{"start":{"line":13,"column":0},"end":{"line":28,"column":3}},"6":{"start":{"line":14,"column":2},"end":{"line":20,"column":5}},"7":{"start":{"line":15,"column":17},"end":{"line":18,"column":6}},"8":{"start":{"line":16,"column":19},"end":{"line":16,"column":30}},"9":{"start":{"line":17,"column":6},"end":{"line":17,"column":20}},"10":{"start":{"line":19,"column":4},"end":{"line":19,"column":78}},"11":{"start":{"line":21,"column":2},"end":{"line":27,"column":5}},"12":{"start":{"line":22,"column":17},"end":{"line":25,"column":6}},"13":{"start":{"line":23,"column":19},"end":{"line":23,"column":31}},"14":{"start":{"line":24,"column":6},"end":{"line":24,"column":21}},"15":{"start":{"line":26,"column":4},"end":{"line":26,"column":78}}},"fnMap":{"0":{"name":"_interopRequireDefault","decl":{"start":{"line":9,"column":9},"end":{"line":9,"column":31}},"loc":{"start":{"line":9,"column":37},"end":{"line":9,"column":95}},"line":9},"1":{"name":"(anonymous_1)","decl":{"start":{"line":13,"column":32},"end":{"line":13,"column":33}},"loc":{"start":{"line":13,"column":44},"end":{"line":28,"column":1}},"line":13},"2":{"name":"(anonymous_2)","decl":{"start":{"line":14,"column":14},"end":{"line":14,"column":15}},"loc":{"start":{"line":14,"column":26},"end":{"line":20,"column":3}},"line":14},"3":{"name":"(anonymous_3)","decl":{"start":{"line":15,"column":46},"end":{"line":15,"column":47}},"loc":{"start":{"line":15,"column":62},"end":{"line":18,"column":5}},"line":15},"4":{"name":"(anonymous_4)","decl":{"start":{"line":21,"column":15},"end":{"line":21,"column":16}},"loc":{"start":{"line":21,"column":27},"end":{"line":27,"column":3}},"line":21},"5":{"name":"(anonymous_5)","decl":{"start":{"line":22,"column":46},"end":{"line":22,"column":47}},"loc":{"start":{"line":22,"column":63},"end":{"line":25,"column":5}},"line":22}},"branchMap":{"0":{"loc":{"start":{"line":9,"column":46},"end":{"line":9,"column":92}},"type":"cond-expr","locations":[{"start":{"line":9,"column":70},"end":{"line":9,"column":73}},{"start":{"line":9,"column":76},"end":{"line":9,"column":92}}],"line":9},"1":{"loc":{"start":{"line":9,"column":46},"end":{"line":9,"column":67}},"type":"binary-expr","locations":[{"start":{"line":9,"column":46},"end":{"line":9,"column":49}},{"start":{"line":9,"column":53},"end":{"line":9,"column":67}}],"line":9}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":2,"9":2,"10":1,"11":1,"12":1,"13":2,"14":2,"15":1},"f":{"0":1,"1":1,"2":1,"3":2,"4":1,"5":2},"b":{"0":[1,0],"1":[1,1]},"inputSourceMap":{"version":3,"sources":["filter.test.js"],"names":["users","user","active","describe","it","result","to","deep","equal"],"mappings":";;AAAA;;AACA;;;;;;AAEA,IAAMA,QAAQ,CACZ,EAAEC,MAAM,MAAR,EAAgBC,QAAQ,IAAxB,EADY,EAEZ,EAAED,MAAM,KAAR,EAAeC,QAAQ,KAAvB,EAFY,CAAd;;AAKAC,SAAS,qBAAT,EAAgC,YAAM;AACpCC,KAAG,OAAH,EAAY,YAAY;AACtB,QAAMC,SAAS,sBAAOL,KAAP,EAAc;AAAA,UAAGE,MAAH,QAAGA,MAAH;AAAA,aAAgBA,MAAhB;AAAA,KAAd,CAAf;AACA,sBAAOG,MAAP,EAAeC,EAAf,CAAkBC,IAAlB,CAAuBC,KAAvB,CAA6B,CAAC,EAAEP,MAAM,MAAR,EAAgBC,QAAQ,IAAxB,EAAD,CAA7B;AACD,GAHD;AAIAE,KAAG,QAAH,EAAa,YAAY;AACvB,QAAMC,SAAS,sBAAOL,KAAP,EAAc;AAAA,UAAGE,MAAH,SAAGA,MAAH;AAAA,aAAgB,CAACA,MAAjB;AAAA,KAAd,CAAf;AACA,sBAAOG,MAAP,EAAeC,EAAf,CAAkBC,IAAlB,CAAuBC,KAAvB,CAA6B,CAAC,EAAEP,MAAM,KAAR,EAAeC,QAAQ,KAAvB,EAAD,CAA7B;AACD,GAHD;AAID,CATD","file":"filter.test.js","sourceRoot":"C:/TUT2019/SoftwareTesting/COMP.SE.200-2021-2022-1/test/src","sourcesContent":["import { expect } from 'chai';\r\nimport filter from './../../src/filter';\r\n\r\nconst users = [\r\n  { user: 'josh', active: true },\r\n  { user: 'tim', active: false },\r\n];\r\n\r\ndescribe('filter.js unit test', () => {\r\n  it('First', function () {\r\n    const result = filter(users, ({ active }) => active);\r\n    expect(result).to.deep.equal([{ user: 'josh', active: true }]);\r\n  });\r\n  it('Second', function () {\r\n    const result = filter(users, ({ active }) => !active);\r\n    expect(result).to.deep.equal([{ user: 'tim', active: false }]);\r\n  });\r\n});\r\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"3e9ca43c64f9baaf95e57fca0b592498b38588a2","contentHash":"0d4ac1d6391f9ba321e524a2a26f74e6e1b24627b1742299002b949784db15ad"},"C:\\TUT2019\\SoftwareTesting\\COMP.SE.200-2021-2022-1\\src\\filter.js":{"path":"C:\\TUT2019\\SoftwareTesting\\COMP.SE.200-2021-2022-1\\src\\filter.js","statementMap":{"0":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"1":{"start":{"line":30,"column":14},"end":{"line":30,"column":16}},"2":{"start":{"line":31,"column":17},"end":{"line":31,"column":18}},"3":{"start":{"line":32,"column":15},"end":{"line":32,"column":47}},"4":{"start":{"line":33,"column":15},"end":{"line":33,"column":19}},"5":{"start":{"line":35,"column":2},"end":{"line":40,"column":3}},"6":{"start":{"line":36,"column":16},"end":{"line":36,"column":28}},"7":{"start":{"line":37,"column":4},"end":{"line":39,"column":5}},"8":{"start":{"line":38,"column":6},"end":{"line":38,"column":33}},"9":{"start":{"line":41,"column":2},"end":{"line":41,"column":16}},"10":{"start":{"line":44,"column":0},"end":{"line":44,"column":25}}},"fnMap":{"0":{"name":"filter","decl":{"start":{"line":29,"column":9},"end":{"line":29,"column":15}},"loc":{"start":{"line":29,"column":34},"end":{"line":42,"column":1}},"line":29}},"branchMap":{"0":{"loc":{"start":{"line":32,"column":15},"end":{"line":32,"column":47}},"type":"cond-expr","locations":[{"start":{"line":32,"column":31},"end":{"line":32,"column":32}},{"start":{"line":32,"column":35},"end":{"line":32,"column":47}}],"line":32},"1":{"loc":{"start":{"line":37,"column":4},"end":{"line":39,"column":5}},"type":"if","locations":[{"start":{"line":37,"column":4},"end":{"line":39,"column":5}},{"start":{"line":37,"column":4},"end":{"line":39,"column":5}}],"line":37}},"s":{"0":1,"1":2,"2":2,"3":2,"4":2,"5":2,"6":4,"7":4,"8":2,"9":2,"10":1},"f":{"0":2},"b":{"0":[0,2],"1":[2,2]},"inputSourceMap":{"version":3,"sources":["filter.js"],"names":["filter","array","predicate","index","resIndex","length","result","value"],"mappings":";;;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;AAuBA,SAASA,MAAT,CAAgBC,KAAhB,EAAuBC,SAAvB,EAAkC;AAChC,MAAIC,QAAQ,CAAC,CAAb;AACA,MAAIC,WAAW,CAAf;AACA,MAAMC,SAASJ,SAAS,IAAT,GAAgB,CAAhB,GAAoBA,MAAMI,MAAzC;AACA,MAAMC,SAAS,CAAC,EAAD,CAAf;;AAEA,SAAO,EAAEH,KAAF,GAAUE,MAAjB,EAAyB;AACvB,QAAME,QAAQN,MAAME,KAAN,CAAd;AACA,QAAID,UAAUK,KAAV,EAAiBJ,KAAjB,EAAwBF,KAAxB,CAAJ,EAAoC;AAClCK,aAAOF,UAAP,IAAqBG,KAArB;AACD;AACF;AACD,SAAOD,MAAP;AACD;;kBAEcN,M","file":"filter.js","sourceRoot":"C:/TUT2019/SoftwareTesting/COMP.SE.200-2021-2022-1/src","sourcesContent":["/**\n * Iterates over elements of `array`, returning an array of all elements\n * `predicate` returns truthy for. The predicate is invoked with three\n * arguments: (value, index, array).\n *\n * **Note:** Unlike `remove`, this method returns a new array.\n *\n * @since 5.0.0\n * @category Array\n * @param {Array} array The array to iterate over.\n * @param {Function} predicate The function invoked per iteration.\n * @returns {Array} Returns the new filtered array.\n * @see pull, pullAll, pullAllBy, pullAllWith, pullAt, remove, reject\n * @example\n *\n * const users = [\n *   { 'user': 'barney', 'active': true },\n *   { 'user': 'fred',   'active': false }\n * ]\n *\n * filter(users, ({ active }) => active)\n * // => objects for ['barney']\n */\nfunction filter(array, predicate) {\n  let index = -1\n  let resIndex = 0\n  const length = array == null ? 0 : array.length\n  const result = [[]]\n\n  while (++index < length) {\n    const value = array[index]\n    if (predicate(value, index, array)) {\n      result[resIndex++] = value\n    }\n  }\n  return result\n}\n\nexport default filter\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"57fd6d1601ae2233e9699f38144e8e1533b33d24","contentHash":"59ebc8e951489524c76074a23389052078a448cd8ea779e79b42742f7a8729e3"},"C:\\TUT2019\\SoftwareTesting\\COMP.SE.200-2021-2022-1\\test\\src\\isDate.test.js":{"path":"C:\\TUT2019\\SoftwareTesting\\COMP.SE.200-2021-2022-1\\test\\src\\isDate.test.js","statementMap":{"0":{"start":{"line":3,"column":12},"end":{"line":3,"column":27}},"1":{"start":{"line":5,"column":14},"end":{"line":5,"column":43}},"2":{"start":{"line":7,"column":15},"end":{"line":7,"column":46}},"3":{"start":{"line":9,"column":39},"end":{"line":9,"column":93}},"4":{"start":{"line":11,"column":0},"end":{"line":19,"column":3}},"5":{"start":{"line":12,"column":2},"end":{"line":18,"column":5}},"6":{"start":{"line":13,"column":20},"end":{"line":13,"column":102}},"7":{"start":{"line":15,"column":4},"end":{"line":17,"column":7}},"8":{"start":{"line":16,"column":6},"end":{"line":16,"column":88}}},"fnMap":{"0":{"name":"_interopRequireDefault","decl":{"start":{"line":9,"column":9},"end":{"line":9,"column":31}},"loc":{"start":{"line":9,"column":37},"end":{"line":9,"column":95}},"line":9},"1":{"name":"(anonymous_1)","decl":{"start":{"line":11,"column":22},"end":{"line":11,"column":23}},"loc":{"start":{"line":11,"column":34},"end":{"line":19,"column":1}},"line":11},"2":{"name":"(anonymous_2)","decl":{"start":{"line":12,"column":67},"end":{"line":12,"column":68}},"loc":{"start":{"line":12,"column":79},"end":{"line":18,"column":3}},"line":12},"3":{"name":"(anonymous_3)","decl":{"start":{"line":15,"column":18},"end":{"line":15,"column":19}},"loc":{"start":{"line":15,"column":38},"end":{"line":17,"column":5}},"line":15}},"branchMap":{"0":{"loc":{"start":{"line":9,"column":46},"end":{"line":9,"column":92}},"type":"cond-expr","locations":[{"start":{"line":9,"column":70},"end":{"line":9,"column":73}},{"start":{"line":9,"column":76},"end":{"line":9,"column":92}}],"line":9},"1":{"loc":{"start":{"line":9,"column":46},"end":{"line":9,"column":67}},"type":"binary-expr","locations":[{"start":{"line":9,"column":46},"end":{"line":9,"column":49}},{"start":{"line":9,"column":53},"end":{"line":9,"column":67}}],"line":9}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":2},"f":{"0":1,"1":1,"2":1,"3":2},"b":{"0":[1,0],"1":[1,1]},"inputSourceMap":{"version":3,"sources":["isDate.test.js"],"names":["describe","it","testCases","test","Date","result","map","testCase","to","equal"],"mappings":";;AAAA;;AACA;;;;;;AAEAA,SAAS,WAAT,EAAsB,YAAM;AAC1BC,KAAG,4DAAH,EAAiE,YAAM;AACrE,QAAMC,YAAY,CAChB,EAAEC,MAAM,IAAIC,IAAJ,EAAR,EAAoBC,QAAQ,IAA5B,EADgB,EAEhB,EAAEF,MAAM,mBAAR,EAA6BE,QAAQ,KAArC,EAFgB,CAAlB;;AAKAH,cAAUI,GAAV,CAAc,UAACC,QAAD,EAAc;AAC1B,wBAAO,sBAAOA,SAASJ,IAAhB,CAAP,EAA8BK,EAA9B,CAAiCC,KAAjC,CAAuCF,SAASF,MAAhD;AACD,KAFD;AAGD,GATD;AAUD,CAXD","file":"isDate.test.js","sourceRoot":"C:/TUT2019/SoftwareTesting/COMP.SE.200-2021-2022-1/test/src","sourcesContent":["import { expect } from 'chai';\r\nimport isDate from './../../src/isDate';\r\n\r\ndescribe('isDate.js', () => {\r\n  it('Should checks if `value` is classified as a `Date` object.', () => {\r\n    const testCases = [\r\n      { test: new Date(), result: true },\r\n      { test: 'Mon April 23 2012', result: false },\r\n    ];\r\n\r\n    testCases.map((testCase) => {\r\n      expect(isDate(testCase.test)).to.equal(testCase.result);\r\n    });\r\n  });\r\n});\r\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"f5606e3b50903310c108bb861a09c38a17becf01","contentHash":"f2279f1214835e7029b4a10ca560b2dd20607978dd172939fcf4e2e59da9f274"},"C:\\TUT2019\\SoftwareTesting\\COMP.SE.200-2021-2022-1\\src\\isDate.js":{"path":"C:\\TUT2019\\SoftwareTesting\\COMP.SE.200-2021-2022-1\\src\\isDate.js","statementMap":{"0":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"1":{"start":{"line":7,"column":14},"end":{"line":7,"column":46}},"2":{"start":{"line":9,"column":15},"end":{"line":9,"column":46}},"3":{"start":{"line":11,"column":20},"end":{"line":11,"column":48}},"4":{"start":{"line":13,"column":21},"end":{"line":13,"column":58}},"5":{"start":{"line":15,"column":17},"end":{"line":15,"column":52}},"6":{"start":{"line":17,"column":18},"end":{"line":17,"column":52}},"7":{"start":{"line":19,"column":39},"end":{"line":19,"column":93}},"8":{"start":{"line":22,"column":17},"end":{"line":22,"column":66}},"9":{"start":{"line":39,"column":13},"end":{"line":43,"column":1}},"10":{"start":{"line":40,"column":2},"end":{"line":40,"column":27}},"11":{"start":{"line":42,"column":2},"end":{"line":42,"column":95}},"12":{"start":{"line":45,"column":0},"end":{"line":45,"column":25}}},"fnMap":{"0":{"name":"_interopRequireDefault","decl":{"start":{"line":19,"column":9},"end":{"line":19,"column":31}},"loc":{"start":{"line":19,"column":37},"end":{"line":19,"column":95}},"line":19},"1":{"name":"(anonymous_1)","decl":{"start":{"line":39,"column":26},"end":{"line":39,"column":27}},"loc":{"start":{"line":39,"column":43},"end":{"line":41,"column":1}},"line":39},"2":{"name":"(anonymous_2)","decl":{"start":{"line":41,"column":4},"end":{"line":41,"column":5}},"loc":{"start":{"line":41,"column":21},"end":{"line":43,"column":1}},"line":41}},"branchMap":{"0":{"loc":{"start":{"line":19,"column":46},"end":{"line":19,"column":92}},"type":"cond-expr","locations":[{"start":{"line":19,"column":70},"end":{"line":19,"column":73}},{"start":{"line":19,"column":76},"end":{"line":19,"column":92}}],"line":19},"1":{"loc":{"start":{"line":19,"column":46},"end":{"line":19,"column":67}},"type":"binary-expr","locations":[{"start":{"line":19,"column":46},"end":{"line":19,"column":49}},{"start":{"line":19,"column":53},"end":{"line":19,"column":67}}],"line":19},"2":{"loc":{"start":{"line":22,"column":17},"end":{"line":22,"column":66}},"type":"binary-expr","locations":[{"start":{"line":22,"column":17},"end":{"line":22,"column":36}},{"start":{"line":22,"column":40},"end":{"line":22,"column":66}}],"line":22},"3":{"loc":{"start":{"line":39,"column":13},"end":{"line":43,"column":1}},"type":"cond-expr","locations":[{"start":{"line":39,"column":26},"end":{"line":41,"column":1}},{"start":{"line":41,"column":4},"end":{"line":43,"column":1}}],"line":39},"4":{"loc":{"start":{"line":42,"column":9},"end":{"line":42,"column":94}},"type":"binary-expr","locations":[{"start":{"line":42,"column":9},"end":{"line":42,"column":43}},{"start":{"line":42,"column":47},"end":{"line":42,"column":94}}],"line":42}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":3,"8":1,"9":1,"10":2,"11":0,"12":1},"f":{"0":3,"1":2,"2":0},"b":{"0":[3,0],"1":[3,3],"2":[1,1],"3":[1,0],"4":[0,0]},"inputSourceMap":{"version":3,"sources":["isDate.js"],"names":["nodeIsDate","nodeTypes","isDate","value"],"mappings":";;;;;;AAAA;;;;AACA;;;;AACA;;;;;;AAEA;AACA,IAAMA,aAAaC,uBAAaA,oBAAUC,MAA1C;;AAEA;;;;;;;;;;;;;;;AAeA,IAAMA,SAASF,aACX,UAACG,KAAD;AAAA,SAAWH,WAAWG,KAAX,CAAX;AAAA,CADW,GAEX,UAACA,KAAD;AAAA,SAAW,4BAAaA,KAAb,KAAuB,sBAAOA,KAAP,KAAiB,eAAnD;AAAA,CAFJ;;kBAIeD,M","file":"isDate.js","sourceRoot":"C:/TUT2019/SoftwareTesting/COMP.SE.200-2021-2022-1/src","sourcesContent":["import getTag from './.internal/getTag.js'\nimport isObjectLike from './isObjectLike.js'\nimport nodeTypes from './.internal/nodeTypes.js'\n\n/* Node.js helper references. */\nconst nodeIsDate = nodeTypes && nodeTypes.isDate\n\n/**\n * Checks if `value` is classified as a `Date` object.\n *\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a date object, else `false`.\n * @example\n *\n * isDate(new Date)\n * // => true\n *\n * isDate('Mon April 23 2012')\n * // => false\n */\nconst isDate = nodeIsDate\n  ? (value) => nodeIsDate(value)\n  : (value) => isObjectLike(value) && getTag(value) == '[object Date]'\n\nexport default isDate\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"4e87ebccc8b42b8a12337f9ab116e0c9b1d3e378","contentHash":"f698ba5519c591c52fc7f5f63cff9fce73323392de93da45f19f0674f7d73582"},"C:\\TUT2019\\SoftwareTesting\\COMP.SE.200-2021-2022-1\\src\\isObjectLike.js":{"path":"C:\\TUT2019\\SoftwareTesting\\COMP.SE.200-2021-2022-1\\src\\isObjectLike.js","statementMap":{"0":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"1":{"start":{"line":7,"column":14},"end":{"line":7,"column":268}},"2":{"start":{"line":7,"column":101},"end":{"line":7,"column":119}},"3":{"start":{"line":7,"column":141},"end":{"line":7,"column":266}},"4":{"start":{"line":32,"column":2},"end":{"line":32,"column":102}},"5":{"start":{"line":35,"column":0},"end":{"line":35,"column":31}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":7,"column":84},"end":{"line":7,"column":85}},"loc":{"start":{"line":7,"column":99},"end":{"line":7,"column":121}},"line":7},"1":{"name":"(anonymous_1)","decl":{"start":{"line":7,"column":124},"end":{"line":7,"column":125}},"loc":{"start":{"line":7,"column":139},"end":{"line":7,"column":268}},"line":7},"2":{"name":"isObjectLike","decl":{"start":{"line":31,"column":9},"end":{"line":31,"column":21}},"loc":{"start":{"line":31,"column":29},"end":{"line":33,"column":1}},"line":31}},"branchMap":{"0":{"loc":{"start":{"line":7,"column":14},"end":{"line":7,"column":268}},"type":"cond-expr","locations":[{"start":{"line":7,"column":84},"end":{"line":7,"column":121}},{"start":{"line":7,"column":124},"end":{"line":7,"column":268}}],"line":7},"1":{"loc":{"start":{"line":7,"column":14},"end":{"line":7,"column":81}},"type":"binary-expr","locations":[{"start":{"line":7,"column":14},"end":{"line":7,"column":42}},{"start":{"line":7,"column":46},"end":{"line":7,"column":81}}],"line":7},"2":{"loc":{"start":{"line":7,"column":148},"end":{"line":7,"column":265}},"type":"cond-expr","locations":[{"start":{"line":7,"column":244},"end":{"line":7,"column":252}},{"start":{"line":7,"column":255},"end":{"line":7,"column":265}}],"line":7},"3":{"loc":{"start":{"line":7,"column":148},"end":{"line":7,"column":241}},"type":"binary-expr","locations":[{"start":{"line":7,"column":148},"end":{"line":7,"column":151}},{"start":{"line":7,"column":155},"end":{"line":7,"column":183}},{"start":{"line":7,"column":187},"end":{"line":7,"column":213}},{"start":{"line":7,"column":217},"end":{"line":7,"column":241}}],"line":7},"4":{"loc":{"start":{"line":32,"column":9},"end":{"line":32,"column":101}},"type":"binary-expr","locations":[{"start":{"line":32,"column":9},"end":{"line":32,"column":83}},{"start":{"line":32,"column":87},"end":{"line":32,"column":101}}],"line":32},"5":{"loc":{"start":{"line":32,"column":10},"end":{"line":32,"column":69}},"type":"cond-expr","locations":[{"start":{"line":32,"column":41},"end":{"line":32,"column":52}},{"start":{"line":32,"column":55},"end":{"line":32,"column":69}}],"line":32}},"s":{"0":1,"1":1,"2":0,"3":0,"4":0,"5":1},"f":{"0":0,"1":0,"2":0},"b":{"0":[1,0],"1":[1,1],"2":[0,0],"3":[0,0,0,0],"4":[0,0],"5":[0,0]},"inputSourceMap":{"version":3,"sources":["isObjectLike.js"],"names":["isObjectLike","value"],"mappings":";;;;;;;;AAAA;;;;;;;;;;;;;;;;;;;;;;AAsBA,SAASA,YAAT,CAAsBC,KAAtB,EAA6B;AAC3B,SAAO,QAAOA,KAAP,yCAAOA,KAAP,OAAiB,QAAjB,IAA6BA,UAAU,IAA9C;AACD;;kBAEcD,Y","file":"isObjectLike.js","sourceRoot":"C:/TUT2019/SoftwareTesting/COMP.SE.200-2021-2022-1/src","sourcesContent":["/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * isObjectLike({})\n * // => true\n *\n * isObjectLike([1, 2, 3])\n * // => true\n *\n * isObjectLike(Function)\n * // => false\n *\n * isObjectLike(null)\n * // => false\n */\nfunction isObjectLike(value) {\n  return typeof value === 'object' && value !== null\n}\n\nexport default isObjectLike\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"66607b3312a1bf9b14908aa0b804e91cfc4d9d98","contentHash":"9422cc4e7f9921672b217dbe9392a42cb92d009ebc7bb4c34d3cbc863eeaf641"},"C:\\TUT2019\\SoftwareTesting\\COMP.SE.200-2021-2022-1\\test\\src\\isEmpty.test.js":{"path":"C:\\TUT2019\\SoftwareTesting\\COMP.SE.200-2021-2022-1\\test\\src\\isEmpty.test.js","statementMap":{"0":{"start":{"line":3,"column":12},"end":{"line":3,"column":27}},"1":{"start":{"line":5,"column":15},"end":{"line":5,"column":45}},"2":{"start":{"line":7,"column":16},"end":{"line":7,"column":48}},"3":{"start":{"line":9,"column":39},"end":{"line":9,"column":93}},"4":{"start":{"line":11,"column":0},"end":{"line":19,"column":3}},"5":{"start":{"line":12,"column":2},"end":{"line":18,"column":5}},"6":{"start":{"line":13,"column":20},"end":{"line":13,"column":202}},"7":{"start":{"line":15,"column":4},"end":{"line":17,"column":7}},"8":{"start":{"line":16,"column":6},"end":{"line":16,"column":89}}},"fnMap":{"0":{"name":"_interopRequireDefault","decl":{"start":{"line":9,"column":9},"end":{"line":9,"column":31}},"loc":{"start":{"line":9,"column":37},"end":{"line":9,"column":95}},"line":9},"1":{"name":"(anonymous_1)","decl":{"start":{"line":11,"column":33},"end":{"line":11,"column":34}},"loc":{"start":{"line":11,"column":45},"end":{"line":19,"column":1}},"line":11},"2":{"name":"(anonymous_2)","decl":{"start":{"line":12,"column":82},"end":{"line":12,"column":83}},"loc":{"start":{"line":12,"column":94},"end":{"line":18,"column":3}},"line":12},"3":{"name":"(anonymous_3)","decl":{"start":{"line":15,"column":18},"end":{"line":15,"column":19}},"loc":{"start":{"line":15,"column":38},"end":{"line":17,"column":5}},"line":15}},"branchMap":{"0":{"loc":{"start":{"line":9,"column":46},"end":{"line":9,"column":92}},"type":"cond-expr","locations":[{"start":{"line":9,"column":70},"end":{"line":9,"column":73}},{"start":{"line":9,"column":76},"end":{"line":9,"column":92}}],"line":9},"1":{"loc":{"start":{"line":9,"column":46},"end":{"line":9,"column":67}},"type":"binary-expr","locations":[{"start":{"line":9,"column":46},"end":{"line":9,"column":49}},{"start":{"line":9,"column":53},"end":{"line":9,"column":67}}],"line":9}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":6},"f":{"0":1,"1":1,"2":1,"3":6},"b":{"0":[1,0],"1":[1,1]},"inputSourceMap":{"version":3,"sources":["isEmpty.test.js"],"names":["describe","it","testCases","test","result","map","testCase","to","equal"],"mappings":";;AAAA;;AACA;;;;;;AAEAA,SAAS,sBAAT,EAAiC,YAAM;AACrCC,KAAG,2EAAH,EAAgF,YAAM;AACpF,QAAMC,YAAY,CAChB,EAAEC,MAAM,IAAR,EAAcC,QAAQ,IAAtB,EADgB,EAEhB,EAAED,MAAM,EAAR,EAAYC,QAAQ,IAApB,EAFgB,EAGhB,EAAED,MAAM,EAAR,EAAYC,QAAQ,IAApB,EAHgB,EAIhB,EAAED,MAAM,EAAR,EAAYC,QAAQ,IAApB,EAJgB,EAKhB,EAAED,MAAM,KAAR,EAAeC,QAAQ,KAAvB,EALgB,EAMhB,EAAED,MAAM,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAAR,EAAmBC,QAAQ,KAA3B,EANgB,CAAlB;;AASAF,cAAUG,GAAV,CAAc,UAACC,QAAD,EAAc;AAC1B,wBAAO,uBAAQA,SAASH,IAAjB,CAAP,EAA+BI,EAA/B,CAAkCC,KAAlC,CAAwCF,SAASF,MAAjD;AACD,KAFD;AAGD,GAbD;AAcD,CAfD","file":"isEmpty.test.js","sourceRoot":"C:/TUT2019/SoftwareTesting/COMP.SE.200-2021-2022-1/test/src","sourcesContent":["import { expect } from 'chai';\r\nimport isEmpty from './../../src/isEmpty';\r\n\r\ndescribe('isEmpty.js unit test', () => {\r\n  it('Should check if `value` is an empty object, map, array, collection or set', () => {\r\n    const testCases = [\r\n      { test: null, result: true },\r\n      { test: '', result: true },\r\n      { test: [], result: true },\r\n      { test: {}, result: true },\r\n      { test: 'abc', result: false },\r\n      { test: [1, 2, 3], result: false },\r\n    ];\r\n\r\n    testCases.map((testCase) => {\r\n      expect(isEmpty(testCase.test)).to.equal(testCase.result);\r\n    });\r\n  });\r\n});\r\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"b584d20841233e37a69eb319f58f4ddbc5137705","contentHash":"32730d17408e6e2ef4429434d1c1dbc5d35a944639bdd40ad81d1ffc2b802d94"},"C:\\TUT2019\\SoftwareTesting\\COMP.SE.200-2021-2022-1\\src\\isEmpty.js":{"path":"C:\\TUT2019\\SoftwareTesting\\COMP.SE.200-2021-2022-1\\src\\isEmpty.js","statementMap":{"0":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"1":{"start":{"line":7,"column":14},"end":{"line":7,"column":46}},"2":{"start":{"line":9,"column":15},"end":{"line":9,"column":46}},"3":{"start":{"line":11,"column":19},"end":{"line":11,"column":46}},"4":{"start":{"line":13,"column":20},"end":{"line":13,"column":56}},"5":{"start":{"line":15,"column":19},"end":{"line":15,"column":46}},"6":{"start":{"line":17,"column":20},"end":{"line":17,"column":56}},"7":{"start":{"line":19,"column":16},"end":{"line":19,"column":40}},"8":{"start":{"line":21,"column":17},"end":{"line":21,"column":50}},"9":{"start":{"line":23,"column":19},"end":{"line":23,"column":56}},"10":{"start":{"line":25,"column":20},"end":{"line":25,"column":56}},"11":{"start":{"line":27,"column":20},"end":{"line":27,"column":48}},"12":{"start":{"line":29,"column":21},"end":{"line":29,"column":58}},"13":{"start":{"line":31,"column":39},"end":{"line":31,"column":93}},"14":{"start":{"line":34,"column":21},"end":{"line":34,"column":52}},"15":{"start":{"line":71,"column":2},"end":{"line":73,"column":3}},"16":{"start":{"line":72,"column":4},"end":{"line":72,"column":16}},"17":{"start":{"line":74,"column":2},"end":{"line":76,"column":3}},"18":{"start":{"line":75,"column":4},"end":{"line":75,"column":25}},"19":{"start":{"line":77,"column":12},"end":{"line":77,"column":40}},"20":{"start":{"line":78,"column":2},"end":{"line":80,"column":3}},"21":{"start":{"line":79,"column":4},"end":{"line":79,"column":23}},"22":{"start":{"line":81,"column":2},"end":{"line":83,"column":3}},"23":{"start":{"line":82,"column":4},"end":{"line":82,"column":38}},"24":{"start":{"line":84,"column":2},"end":{"line":88,"column":3}},"25":{"start":{"line":85,"column":4},"end":{"line":87,"column":5}},"26":{"start":{"line":86,"column":6},"end":{"line":86,"column":19}},"27":{"start":{"line":89,"column":2},"end":{"line":89,"column":14}},"28":{"start":{"line":92,"column":0},"end":{"line":92,"column":26}}},"fnMap":{"0":{"name":"_interopRequireDefault","decl":{"start":{"line":31,"column":9},"end":{"line":31,"column":31}},"loc":{"start":{"line":31,"column":37},"end":{"line":31,"column":95}},"line":31},"1":{"name":"isEmpty","decl":{"start":{"line":70,"column":9},"end":{"line":70,"column":16}},"loc":{"start":{"line":70,"column":24},"end":{"line":90,"column":1}},"line":70}},"branchMap":{"0":{"loc":{"start":{"line":31,"column":46},"end":{"line":31,"column":92}},"type":"cond-expr","locations":[{"start":{"line":31,"column":70},"end":{"line":31,"column":73}},{"start":{"line":31,"column":76},"end":{"line":31,"column":92}}],"line":31},"1":{"loc":{"start":{"line":31,"column":46},"end":{"line":31,"column":67}},"type":"binary-expr","locations":[{"start":{"line":31,"column":46},"end":{"line":31,"column":49}},{"start":{"line":31,"column":53},"end":{"line":31,"column":67}}],"line":31},"2":{"loc":{"start":{"line":71,"column":2},"end":{"line":73,"column":3}},"type":"if","locations":[{"start":{"line":71,"column":2},"end":{"line":73,"column":3}},{"start":{"line":71,"column":2},"end":{"line":73,"column":3}}],"line":71},"3":{"loc":{"start":{"line":74,"column":2},"end":{"line":76,"column":3}},"type":"if","locations":[{"start":{"line":74,"column":2},"end":{"line":76,"column":3}},{"start":{"line":74,"column":2},"end":{"line":76,"column":3}}],"line":74},"4":{"loc":{"start":{"line":74,"column":6},"end":{"line":74,"column":241}},"type":"binary-expr","locations":[{"start":{"line":74,"column":6},"end":{"line":74,"column":39}},{"start":{"line":74,"column":44},"end":{"line":74,"column":64}},{"start":{"line":74,"column":68},"end":{"line":74,"column":93}},{"start":{"line":74,"column":97},"end":{"line":74,"column":131}},{"start":{"line":74,"column":135},"end":{"line":74,"column":165}},{"start":{"line":74,"column":169},"end":{"line":74,"column":203}},{"start":{"line":74,"column":207},"end":{"line":74,"column":240}}],"line":74},"5":{"loc":{"start":{"line":78,"column":2},"end":{"line":80,"column":3}},"type":"if","locations":[{"start":{"line":78,"column":2},"end":{"line":80,"column":3}},{"start":{"line":78,"column":2},"end":{"line":80,"column":3}}],"line":78},"6":{"loc":{"start":{"line":78,"column":6},"end":{"line":78,"column":52}},"type":"binary-expr","locations":[{"start":{"line":78,"column":6},"end":{"line":78,"column":27}},{"start":{"line":78,"column":31},"end":{"line":78,"column":52}}],"line":78},"7":{"loc":{"start":{"line":81,"column":2},"end":{"line":83,"column":3}},"type":"if","locations":[{"start":{"line":81,"column":2},"end":{"line":83,"column":3}},{"start":{"line":81,"column":2},"end":{"line":83,"column":3}}],"line":81},"8":{"loc":{"start":{"line":85,"column":4},"end":{"line":87,"column":5}},"type":"if","locations":[{"start":{"line":85,"column":4},"end":{"line":87,"column":5}},{"start":{"line":85,"column":4},"end":{"line":87,"column":5}}],"line":85}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":6,"14":1,"15":6,"16":1,"17":5,"18":4,"19":1,"20":1,"21":0,"22":1,"23":0,"24":1,"25":0,"26":0,"27":1,"28":1},"f":{"0":6,"1":6},"b":{"0":[6,0],"1":[6,6],"2":[1,5],"3":[4,1],"4":[5,4,2,0,0,0,0],"5":[0,1],"6":[1,1],"7":[0,1],"8":[0,0]},"inputSourceMap":{"version":3,"sources":["isEmpty.js"],"names":["hasOwnProperty","Object","prototype","isEmpty","value","Array","isArray","splice","length","tag","size","keys","key","call"],"mappings":";;;;;;AAAA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;;;AAEA;AACA,IAAMA,iBAAiBC,OAAOC,SAAP,CAAiBF,cAAxC;;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkCA,SAASG,OAAT,CAAiBC,KAAjB,EAAwB;AACtB,MAAIA,SAAS,IAAb,EAAmB;AACjB,WAAO,IAAP;AACD;AACD,MAAI,2BAAYA,KAAZ,MACCC,MAAMC,OAAN,CAAcF,KAAd,KAAwB,OAAOA,KAAP,KAAiB,QAAzC,IAAqD,OAAOA,MAAMG,MAAb,KAAwB,UAA7E,IACC,wBAASH,KAAT,CADD,IACoB,4BAAaA,KAAb,CADpB,IAC2C,2BAAYA,KAAZ,CAF5C,CAAJ,EAEqE;AACnE,WAAO,CAACA,MAAMI,MAAd;AACD;AACD,MAAMC,MAAM,sBAAOL,KAAP,CAAZ;AACA,MAAIK,OAAO,cAAP,IAAyBA,OAAO,cAApC,EAAoD;AAClD,WAAO,CAACL,MAAMM,IAAd;AACD;AACD,MAAI,2BAAYN,KAAZ,CAAJ,EAAwB;AACtB,WAAO,CAACH,OAAOU,IAAP,CAAYP,KAAZ,EAAmBI,MAA3B;AACD;AACD,OAAK,IAAMI,GAAX,IAAkBR,KAAlB,EAAyB;AACvB,QAAIJ,eAAea,IAAf,CAAoBT,KAApB,EAA2BQ,GAA3B,CAAJ,EAAqC;AACnC,aAAO,KAAP;AACD;AACF;AACD,SAAO,IAAP;AACD;;kBAEcT,O","file":"isEmpty.js","sourceRoot":"C:/TUT2019/SoftwareTesting/COMP.SE.200-2021-2022-1/src","sourcesContent":["import getTag from './.internal/getTag.js'\nimport isArguments from './isArguments.js'\nimport isArrayLike from './isArrayLike.js'\nimport isBuffer from './isBuffer.js'\nimport isPrototype from './.internal/isPrototype.js'\nimport isTypedArray from './isTypedArray.js'\n\n/** Used to check objects for own properties. */\nconst hasOwnProperty = Object.prototype.hasOwnProperty\n\n/**\n * Checks if `value` is an empty object, collection, map, or set.\n *\n * Objects are considered empty if they have no own enumerable string keyed\n * properties.\n *\n * Array-like values such as `arguments` objects, arrays, buffers, strings, or\n * jQuery-like collections are considered empty if they have a `length` of `0`.\n * Similarly, maps and sets are considered empty if they have a `size` of `0`.\n *\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is empty, else `false`.\n * @example\n *\n * isEmpty(null)\n * // => true\n *\n * isEmpty(true)\n * // => true\n *\n * isEmpty(1)\n * // => true\n *\n * isEmpty([1, 2, 3])\n * // => false\n *\n * isEmpty('abc')\n * // => false\n *\n * isEmpty({ 'a': 1 })\n * // => false\n */\nfunction isEmpty(value) {\n  if (value == null) {\n    return true\n  }\n  if (isArrayLike(value) &&\n      (Array.isArray(value) || typeof value === 'string' || typeof value.splice === 'function' ||\n        isBuffer(value) || isTypedArray(value) || isArguments(value))) {\n    return !value.length\n  }\n  const tag = getTag(value)\n  if (tag == '[object Map]' || tag == '[object Set]') {\n    return !value.size\n  }\n  if (isPrototype(value)) {\n    return !Object.keys(value).length\n  }\n  for (const key in value) {\n    if (hasOwnProperty.call(value, key)) {\n      return false\n    }\n  }\n  return true\n}\n\nexport default isEmpty\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"fd8f4131ae7e9fdcb5f08a7c29d84d2a99a0942e","contentHash":"854e726f827e672a22a4c59e9dccc4d1b6b7405eefe3ff9257d1a4541c608bda"},"C:\\TUT2019\\SoftwareTesting\\COMP.SE.200-2021-2022-1\\src\\isArguments.js":{"path":"C:\\TUT2019\\SoftwareTesting\\COMP.SE.200-2021-2022-1\\src\\isArguments.js","statementMap":{"0":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"1":{"start":{"line":7,"column":14},"end":{"line":7,"column":46}},"2":{"start":{"line":9,"column":15},"end":{"line":9,"column":46}},"3":{"start":{"line":11,"column":20},"end":{"line":11,"column":48}},"4":{"start":{"line":13,"column":21},"end":{"line":13,"column":58}},"5":{"start":{"line":15,"column":39},"end":{"line":15,"column":93}},"6":{"start":{"line":33,"column":2},"end":{"line":33,"column":100}},"7":{"start":{"line":36,"column":0},"end":{"line":36,"column":30}}},"fnMap":{"0":{"name":"_interopRequireDefault","decl":{"start":{"line":15,"column":9},"end":{"line":15,"column":31}},"loc":{"start":{"line":15,"column":37},"end":{"line":15,"column":95}},"line":15},"1":{"name":"isArguments","decl":{"start":{"line":32,"column":9},"end":{"line":32,"column":20}},"loc":{"start":{"line":32,"column":28},"end":{"line":34,"column":1}},"line":32}},"branchMap":{"0":{"loc":{"start":{"line":15,"column":46},"end":{"line":15,"column":92}},"type":"cond-expr","locations":[{"start":{"line":15,"column":70},"end":{"line":15,"column":73}},{"start":{"line":15,"column":76},"end":{"line":15,"column":92}}],"line":15},"1":{"loc":{"start":{"line":15,"column":46},"end":{"line":15,"column":67}},"type":"binary-expr","locations":[{"start":{"line":15,"column":46},"end":{"line":15,"column":49}},{"start":{"line":15,"column":53},"end":{"line":15,"column":67}}],"line":15},"2":{"loc":{"start":{"line":33,"column":9},"end":{"line":33,"column":99}},"type":"binary-expr","locations":[{"start":{"line":33,"column":9},"end":{"line":33,"column":43}},{"start":{"line":33,"column":47},"end":{"line":33,"column":99}}],"line":33}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":2,"6":0,"7":1},"f":{"0":2,"1":0},"b":{"0":[2,0],"1":[2,2],"2":[0,0]},"inputSourceMap":{"version":3,"sources":["isArguments.js"],"names":["isArguments","value"],"mappings":";;;;;;AAAA;;;;AACA;;;;;;AAEA;;;;;;;;;;;;;;;AAeA,SAASA,WAAT,CAAqBC,KAArB,EAA4B;AAC1B,SAAO,4BAAaA,KAAb,KAAuB,sBAAOA,KAAP,KAAiB,oBAA/C;AACD;;kBAEcD,W","file":"isArguments.js","sourceRoot":"C:/TUT2019/SoftwareTesting/COMP.SE.200-2021-2022-1/src","sourcesContent":["import getTag from './.internal/getTag.js'\nimport isObjectLike from './isObjectLike.js'\n\n/**\n * Checks if `value` is likely an `arguments` object.\n *\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an `arguments` object, else `false`.\n * @example\n *\n * isArguments(function() { return arguments }())\n * // => true\n *\n * isArguments([1, 2, 3])\n * // => false\n */\nfunction isArguments(value) {\n  return isObjectLike(value) && getTag(value) == '[object Arguments]'\n}\n\nexport default isArguments\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"4fc635b39195d3d1ed490a46ea54210ae056dd7d","contentHash":"9d9fec3b66778d13c9416d148c60c8e098955996e4b86d8baf9e02f3d6e62061"},"C:\\TUT2019\\SoftwareTesting\\COMP.SE.200-2021-2022-1\\src\\isArrayLike.js":{"path":"C:\\TUT2019\\SoftwareTesting\\COMP.SE.200-2021-2022-1\\src\\isArrayLike.js","statementMap":{"0":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"1":{"start":{"line":7,"column":16},"end":{"line":7,"column":40}},"2":{"start":{"line":9,"column":17},"end":{"line":9,"column":50}},"3":{"start":{"line":11,"column":39},"end":{"line":11,"column":93}},"4":{"start":{"line":37,"column":2},"end":{"line":37,"column":95}},"5":{"start":{"line":40,"column":0},"end":{"line":40,"column":30}}},"fnMap":{"0":{"name":"_interopRequireDefault","decl":{"start":{"line":11,"column":9},"end":{"line":11,"column":31}},"loc":{"start":{"line":11,"column":37},"end":{"line":11,"column":95}},"line":11},"1":{"name":"isArrayLike","decl":{"start":{"line":36,"column":9},"end":{"line":36,"column":20}},"loc":{"start":{"line":36,"column":28},"end":{"line":38,"column":1}},"line":36}},"branchMap":{"0":{"loc":{"start":{"line":11,"column":46},"end":{"line":11,"column":92}},"type":"cond-expr","locations":[{"start":{"line":11,"column":70},"end":{"line":11,"column":73}},{"start":{"line":11,"column":76},"end":{"line":11,"column":92}}],"line":11},"1":{"loc":{"start":{"line":11,"column":46},"end":{"line":11,"column":67}},"type":"binary-expr","locations":[{"start":{"line":11,"column":46},"end":{"line":11,"column":49}},{"start":{"line":11,"column":53},"end":{"line":11,"column":67}}],"line":11},"2":{"loc":{"start":{"line":37,"column":9},"end":{"line":37,"column":94}},"type":"binary-expr","locations":[{"start":{"line":37,"column":9},"end":{"line":37,"column":22}},{"start":{"line":37,"column":26},"end":{"line":37,"column":53}},{"start":{"line":37,"column":57},"end":{"line":37,"column":94}}],"line":37}},"s":{"0":1,"1":1,"2":1,"3":1,"4":5,"5":1},"f":{"0":1,"1":5},"b":{"0":[1,0],"1":[1,1],"2":[5,5,5]},"inputSourceMap":{"version":3,"sources":["isArrayLike.js"],"names":["isArrayLike","value","length"],"mappings":";;;;;;AAAA;;;;;;AAEA;;;;;;;;;;;;;;;;;;;;;;;AAuBA,SAASA,WAAT,CAAqBC,KAArB,EAA4B;AAC1B,SAAOA,SAAS,IAAT,IAAiB,OAAOA,KAAP,KAAiB,UAAlC,IAAgD,wBAASA,MAAMC,MAAf,CAAvD;AACD;;kBAEcF,W","file":"isArrayLike.js","sourceRoot":"C:/TUT2019/SoftwareTesting/COMP.SE.200-2021-2022-1/src","sourcesContent":["import isLength from './isLength.js'\n\n/**\n * Checks if `value` is array-like. A value is considered array-like if it's\n * not a function and has a `value.length` that's an integer greater than or\n * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.\n *\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n * @example\n *\n * isArrayLike([1, 2, 3])\n * // => true\n *\n * isArrayLike(document.body.children)\n * // => true\n *\n * isArrayLike('abc')\n * // => true\n *\n * isArrayLike(Function)\n * // => false\n */\nfunction isArrayLike(value) {\n  return value != null && typeof value !== 'function' && isLength(value.length)\n}\n\nexport default isArrayLike\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"f482206dcdd325525ac9204d73b022bb38dd042d","contentHash":"7eb2930eefd62ad0063d9bd759800b5ed3767e944047480eff40b3f402450103"},"C:\\TUT2019\\SoftwareTesting\\COMP.SE.200-2021-2022-1\\src\\isLength.js":{"path":"C:\\TUT2019\\SoftwareTesting\\COMP.SE.200-2021-2022-1\\src\\isLength.js","statementMap":{"0":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"1":{"start":{"line":7,"column":23},"end":{"line":7,"column":39}},"2":{"start":{"line":34,"column":2},"end":{"line":34,"column":96}},"3":{"start":{"line":37,"column":0},"end":{"line":37,"column":27}}},"fnMap":{"0":{"name":"isLength","decl":{"start":{"line":33,"column":9},"end":{"line":33,"column":17}},"loc":{"start":{"line":33,"column":25},"end":{"line":35,"column":1}},"line":33}},"branchMap":{"0":{"loc":{"start":{"line":34,"column":9},"end":{"line":34,"column":95}},"type":"binary-expr","locations":[{"start":{"line":34,"column":9},"end":{"line":34,"column":34}},{"start":{"line":34,"column":38},"end":{"line":34,"column":48}},{"start":{"line":34,"column":52},"end":{"line":34,"column":66}},{"start":{"line":34,"column":70},"end":{"line":34,"column":95}}],"line":34}},"s":{"0":1,"1":1,"2":9,"3":1},"f":{"0":9},"b":{"0":[9,7,7,5]},"inputSourceMap":{"version":3,"sources":["isLength.js"],"names":["MAX_SAFE_INTEGER","isLength","value"],"mappings":";;;;;AAAA;AACA,IAAMA,mBAAmB,gBAAzB;;AAEA;;;;;;;;;;;;;;;;;;;;;;;;AAwBA,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AACvB,SAAO,OAAOA,KAAP,KAAiB,QAAjB,IACLA,QAAQ,CAAC,CADJ,IACSA,QAAQ,CAAR,IAAa,CADtB,IAC2BA,SAASF,gBAD3C;AAED;;kBAEcC,Q","file":"isLength.js","sourceRoot":"C:/TUT2019/SoftwareTesting/COMP.SE.200-2021-2022-1/src","sourcesContent":["/** Used as references for various `Number` constants. */\nconst MAX_SAFE_INTEGER = 9007199254740991\n\n/**\n * Checks if `value` is a valid array-like length.\n *\n * **Note:** This method is loosely based on\n * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\n *\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n * @example\n *\n * isLength(3)\n * // => true\n *\n * isLength(Number.MIN_VALUE)\n * // => false\n *\n * isLength(Infinity)\n * // => false\n *\n * isLength('3')\n * // => false\n */\nfunction isLength(value) {\n  return typeof value === 'number' &&\n    value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER\n}\n\nexport default isLength\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"5202be0903b1d2da63257dde09eca433eb9cf9c6","contentHash":"e3be54a03d3f268bb83de46f9f4e33d59ece9e984a537df64968d2da68771e48"},"C:\\TUT2019\\SoftwareTesting\\COMP.SE.200-2021-2022-1\\src\\isBuffer.js":{"path":"C:\\TUT2019\\SoftwareTesting\\COMP.SE.200-2021-2022-1\\src\\isBuffer.js","statementMap":{"0":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"1":{"start":{"line":7,"column":14},"end":{"line":7,"column":268}},"2":{"start":{"line":7,"column":101},"end":{"line":7,"column":119}},"3":{"start":{"line":7,"column":141},"end":{"line":7,"column":266}},"4":{"start":{"line":9,"column":12},"end":{"line":9,"column":42}},"5":{"start":{"line":11,"column":13},"end":{"line":11,"column":42}},"6":{"start":{"line":13,"column":39},"end":{"line":13,"column":93}},"7":{"start":{"line":16,"column":18},"end":{"line":16,"column":148}},"8":{"start":{"line":19,"column":17},"end":{"line":19,"column":157}},"9":{"start":{"line":22,"column":20},"end":{"line":22,"column":68}},"10":{"start":{"line":25,"column":13},"end":{"line":25,"column":62}},"11":{"start":{"line":28,"column":21},"end":{"line":28,"column":57}},"12":{"start":{"line":45,"column":15},"end":{"line":47,"column":1}},"13":{"start":{"line":46,"column":2},"end":{"line":46,"column":15}},"14":{"start":{"line":49,"column":0},"end":{"line":49,"column":27}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":7,"column":84},"end":{"line":7,"column":85}},"loc":{"start":{"line":7,"column":99},"end":{"line":7,"column":121}},"line":7},"1":{"name":"(anonymous_1)","decl":{"start":{"line":7,"column":124},"end":{"line":7,"column":125}},"loc":{"start":{"line":7,"column":139},"end":{"line":7,"column":268}},"line":7},"2":{"name":"_interopRequireDefault","decl":{"start":{"line":13,"column":9},"end":{"line":13,"column":31}},"loc":{"start":{"line":13,"column":37},"end":{"line":13,"column":95}},"line":13},"3":{"name":"(anonymous_3)","decl":{"start":{"line":45,"column":33},"end":{"line":45,"column":34}},"loc":{"start":{"line":45,"column":45},"end":{"line":47,"column":1}},"line":45}},"branchMap":{"0":{"loc":{"start":{"line":7,"column":14},"end":{"line":7,"column":268}},"type":"cond-expr","locations":[{"start":{"line":7,"column":84},"end":{"line":7,"column":121}},{"start":{"line":7,"column":124},"end":{"line":7,"column":268}}],"line":7},"1":{"loc":{"start":{"line":7,"column":14},"end":{"line":7,"column":81}},"type":"binary-expr","locations":[{"start":{"line":7,"column":14},"end":{"line":7,"column":42}},{"start":{"line":7,"column":46},"end":{"line":7,"column":81}}],"line":7},"2":{"loc":{"start":{"line":7,"column":148},"end":{"line":7,"column":265}},"type":"cond-expr","locations":[{"start":{"line":7,"column":244},"end":{"line":7,"column":252}},{"start":{"line":7,"column":255},"end":{"line":7,"column":265}}],"line":7},"3":{"loc":{"start":{"line":7,"column":148},"end":{"line":7,"column":241}},"type":"binary-expr","locations":[{"start":{"line":7,"column":148},"end":{"line":7,"column":151}},{"start":{"line":7,"column":155},"end":{"line":7,"column":183}},{"start":{"line":7,"column":187},"end":{"line":7,"column":213}},{"start":{"line":7,"column":217},"end":{"line":7,"column":241}}],"line":7},"4":{"loc":{"start":{"line":13,"column":46},"end":{"line":13,"column":92}},"type":"cond-expr","locations":[{"start":{"line":13,"column":70},"end":{"line":13,"column":73}},{"start":{"line":13,"column":76},"end":{"line":13,"column":92}}],"line":13},"5":{"loc":{"start":{"line":13,"column":46},"end":{"line":13,"column":67}},"type":"binary-expr","locations":[{"start":{"line":13,"column":46},"end":{"line":13,"column":49}},{"start":{"line":13,"column":53},"end":{"line":13,"column":67}}],"line":13},"6":{"loc":{"start":{"line":16,"column":18},"end":{"line":16,"column":148}},"type":"binary-expr","locations":[{"start":{"line":16,"column":18},"end":{"line":16,"column":96}},{"start":{"line":16,"column":100},"end":{"line":16,"column":116}},{"start":{"line":16,"column":120},"end":{"line":16,"column":137}},{"start":{"line":16,"column":141},"end":{"line":16,"column":148}}],"line":16},"7":{"loc":{"start":{"line":16,"column":19},"end":{"line":16,"column":82}},"type":"cond-expr","locations":[{"start":{"line":16,"column":52},"end":{"line":16,"column":63}},{"start":{"line":16,"column":66},"end":{"line":16,"column":82}}],"line":16},"8":{"loc":{"start":{"line":19,"column":17},"end":{"line":19,"column":157}},"type":"binary-expr","locations":[{"start":{"line":19,"column":17},"end":{"line":19,"column":28}},{"start":{"line":19,"column":32},"end":{"line":19,"column":108}},{"start":{"line":19,"column":112},"end":{"line":19,"column":127}},{"start":{"line":19,"column":131},"end":{"line":19,"column":147}},{"start":{"line":19,"column":151},"end":{"line":19,"column":157}}],"line":19},"9":{"loc":{"start":{"line":19,"column":33},"end":{"line":19,"column":94}},"type":"cond-expr","locations":[{"start":{"line":19,"column":65},"end":{"line":19,"column":76}},{"start":{"line":19,"column":79},"end":{"line":19,"column":94}}],"line":19},"10":{"loc":{"start":{"line":22,"column":20},"end":{"line":22,"column":68}},"type":"binary-expr","locations":[{"start":{"line":22,"column":20},"end":{"line":22,"column":30}},{"start":{"line":22,"column":34},"end":{"line":22,"column":68}}],"line":22},"11":{"loc":{"start":{"line":25,"column":13},"end":{"line":25,"column":62}},"type":"cond-expr","locations":[{"start":{"line":25,"column":29},"end":{"line":25,"column":50}},{"start":{"line":25,"column":53},"end":{"line":25,"column":62}}],"line":25},"12":{"loc":{"start":{"line":28,"column":21},"end":{"line":28,"column":57}},"type":"cond-expr","locations":[{"start":{"line":28,"column":30},"end":{"line":28,"column":45}},{"start":{"line":28,"column":48},"end":{"line":28,"column":57}}],"line":28},"13":{"loc":{"start":{"line":45,"column":15},"end":{"line":47,"column":1}},"type":"binary-expr","locations":[{"start":{"line":45,"column":15},"end":{"line":45,"column":29}},{"start":{"line":45,"column":33},"end":{"line":47,"column":1}}],"line":45}},"s":{"0":1,"1":1,"2":2,"3":0,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":0,"14":1},"f":{"0":2,"1":0,"2":1,"3":0},"b":{"0":[1,0],"1":[1,1],"2":[0,0],"3":[0,0,0,0],"4":[1,0],"5":[1,1],"6":[1,1,1,1],"7":[0,1],"8":[1,1,1,1,1],"9":[0,1],"10":[1,1],"11":[1,0],"12":[1,0],"13":[1,0]},"inputSourceMap":{"version":3,"sources":["isBuffer.js"],"names":["freeExports","exports","nodeType","freeModule","module","moduleExports","Buffer","root","undefined","nativeIsBuffer","isBuffer"],"mappings":";;;;;;;;AAAA;;;;;;AAEA;AACA,IAAMA,cAAc,QAAOC,OAAP,yCAAOA,OAAP,OAAmB,QAAnB,IAA+BA,YAAY,IAA3C,IAAmD,CAACA,QAAQC,QAA5D,IAAwED,OAA5F;;AAEA;AACA,IAAME,aAAaH,eAAe,QAAOI,MAAP,yCAAOA,MAAP,OAAkB,QAAjC,IAA6CA,WAAW,IAAxD,IAAgE,CAACA,OAAOF,QAAxE,IAAoFE,MAAvG;;AAEA;AACA,IAAMC,gBAAgBF,cAAcA,WAAWF,OAAX,KAAuBD,WAA3D;;AAEA;AACA,IAAMM,SAASD,gBAAgBE,eAAKD,MAArB,GAA8BE,SAA7C;;AAEA;AACA,IAAMC,iBAAiBH,SAASA,OAAOI,QAAhB,GAA2BF,SAAlD;;AAEA;;;;;;;;;;;;;;;AAeA,IAAME,WAAWD,kBAAmB;AAAA,SAAM,KAAN;AAAA,CAApC;;kBAEeC,Q","file":"isBuffer.js","sourceRoot":"C:/TUT2019/SoftwareTesting/COMP.SE.200-2021-2022-1/src","sourcesContent":["import root from './.internal/root.js'\n\n/** Detect free variable `exports`. */\nconst freeExports = typeof exports === 'object' && exports !== null && !exports.nodeType && exports\n\n/** Detect free variable `module`. */\nconst freeModule = freeExports && typeof module === 'object' && module !== null && !module.nodeType && module\n\n/** Detect the popular CommonJS extension `module.exports`. */\nconst moduleExports = freeModule && freeModule.exports === freeExports\n\n/** Built-in value references. */\nconst Buffer = moduleExports ? root.Buffer : undefined\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nconst nativeIsBuffer = Buffer ? Buffer.isBuffer : undefined\n\n/**\n * Checks if `value` is a buffer.\n *\n * @since 4.3.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a buffer, else `false`.\n * @example\n *\n * isBuffer(new Buffer(2))\n * // => true\n *\n * isBuffer(new Uint8Array(2))\n * // => false\n */\nconst isBuffer = nativeIsBuffer || (() => false)\n\nexport default isBuffer\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"7793aec5d227c32da4fc37df95641b392aec0f76","contentHash":"6e4e192f9a1b8a5b7aa7f930673feb76370596ceed4b976c237b4c0956ccc9f0"},"C:\\TUT2019\\SoftwareTesting\\COMP.SE.200-2021-2022-1\\src\\isTypedArray.js":{"path":"C:\\TUT2019\\SoftwareTesting\\COMP.SE.200-2021-2022-1\\src\\isTypedArray.js","statementMap":{"0":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"1":{"start":{"line":7,"column":14},"end":{"line":7,"column":46}},"2":{"start":{"line":9,"column":15},"end":{"line":9,"column":46}},"3":{"start":{"line":11,"column":17},"end":{"line":11,"column":52}},"4":{"start":{"line":13,"column":18},"end":{"line":13,"column":52}},"5":{"start":{"line":15,"column":20},"end":{"line":15,"column":48}},"6":{"start":{"line":17,"column":21},"end":{"line":17,"column":58}},"7":{"start":{"line":19,"column":39},"end":{"line":19,"column":93}},"8":{"start":{"line":22,"column":17},"end":{"line":22,"column":92}},"9":{"start":{"line":25,"column":23},"end":{"line":25,"column":78}},"10":{"start":{"line":42,"column":19},"end":{"line":46,"column":1}},"11":{"start":{"line":43,"column":2},"end":{"line":43,"column":33}},"12":{"start":{"line":45,"column":2},"end":{"line":45,"column":93}},"13":{"start":{"line":48,"column":0},"end":{"line":48,"column":31}}},"fnMap":{"0":{"name":"_interopRequireDefault","decl":{"start":{"line":19,"column":9},"end":{"line":19,"column":31}},"loc":{"start":{"line":19,"column":37},"end":{"line":19,"column":95}},"line":19},"1":{"name":"(anonymous_1)","decl":{"start":{"line":42,"column":38},"end":{"line":42,"column":39}},"loc":{"start":{"line":42,"column":55},"end":{"line":44,"column":1}},"line":42},"2":{"name":"(anonymous_2)","decl":{"start":{"line":44,"column":4},"end":{"line":44,"column":5}},"loc":{"start":{"line":44,"column":21},"end":{"line":46,"column":1}},"line":44}},"branchMap":{"0":{"loc":{"start":{"line":19,"column":46},"end":{"line":19,"column":92}},"type":"cond-expr","locations":[{"start":{"line":19,"column":70},"end":{"line":19,"column":73}},{"start":{"line":19,"column":76},"end":{"line":19,"column":92}}],"line":19},"1":{"loc":{"start":{"line":19,"column":46},"end":{"line":19,"column":67}},"type":"binary-expr","locations":[{"start":{"line":19,"column":46},"end":{"line":19,"column":49}},{"start":{"line":19,"column":53},"end":{"line":19,"column":67}}],"line":19},"2":{"loc":{"start":{"line":25,"column":23},"end":{"line":25,"column":78}},"type":"binary-expr","locations":[{"start":{"line":25,"column":23},"end":{"line":25,"column":42}},{"start":{"line":25,"column":46},"end":{"line":25,"column":78}}],"line":25},"3":{"loc":{"start":{"line":42,"column":19},"end":{"line":46,"column":1}},"type":"cond-expr","locations":[{"start":{"line":42,"column":38},"end":{"line":44,"column":1}},{"start":{"line":44,"column":4},"end":{"line":46,"column":1}}],"line":42},"4":{"loc":{"start":{"line":45,"column":9},"end":{"line":45,"column":92}},"type":"binary-expr","locations":[{"start":{"line":45,"column":9},"end":{"line":45,"column":43}},{"start":{"line":45,"column":47},"end":{"line":45,"column":92}}],"line":45}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":3,"8":1,"9":1,"10":1,"11":0,"12":0,"13":1},"f":{"0":3,"1":0,"2":0},"b":{"0":[3,0],"1":[3,3],"2":[1,1],"3":[1,0],"4":[0,0]},"inputSourceMap":{"version":3,"sources":["isTypedArray.js"],"names":["reTypedTag","nodeIsTypedArray","nodeTypes","isTypedArray","value","test"],"mappings":";;;;;;AAAA;;;;AACA;;;;AACA;;;;;;AAEA;AACA,IAAMA,aAAa,2EAAnB;;AAEA;AACA,IAAMC,mBAAmBC,uBAAaA,oBAAUC,YAAhD;;AAEA;;;;;;;;;;;;;;;AAeA,IAAMA,eAAeF,mBACjB,UAACG,KAAD;AAAA,SAAWH,iBAAiBG,KAAjB,CAAX;AAAA,CADiB,GAEjB,UAACA,KAAD;AAAA,SAAW,4BAAaA,KAAb,KAAuBJ,WAAWK,IAAX,CAAgB,sBAAOD,KAAP,CAAhB,CAAlC;AAAA,CAFJ;;kBAIeD,Y","file":"isTypedArray.js","sourceRoot":"C:/TUT2019/SoftwareTesting/COMP.SE.200-2021-2022-1/src","sourcesContent":["import getTag from './.internal/getTag.js'\nimport nodeTypes from './.internal/nodeTypes.js'\nimport isObjectLike from './isObjectLike.js'\n\n/** Used to match `toStringTag` values of typed arrays. */\nconst reTypedTag = /^\\[object (?:Float(?:32|64)|(?:Int|Uint)(?:8|16|32)|Uint8Clamped)Array\\]$/\n\n/* Node.js helper references. */\nconst nodeIsTypedArray = nodeTypes && nodeTypes.isTypedArray\n\n/**\n * Checks if `value` is classified as a typed array.\n *\n * @since 3.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n * @example\n *\n * isTypedArray(new Uint8Array)\n * // => true\n *\n * isTypedArray([])\n * // => false\n */\nconst isTypedArray = nodeIsTypedArray\n  ? (value) => nodeIsTypedArray(value)\n  : (value) => isObjectLike(value) && reTypedTag.test(getTag(value))\n\nexport default isTypedArray\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"9f6fdae8fef1989887dd0d229b501f0dc6ea3eb9","contentHash":"7143805785b5d450fb1040b91d2ffe109e3d92cc2430505c1d23931b850e76c3"},"C:\\TUT2019\\SoftwareTesting\\COMP.SE.200-2021-2022-1\\test\\src\\isLength.test.js":{"path":"C:\\TUT2019\\SoftwareTesting\\COMP.SE.200-2021-2022-1\\test\\src\\isLength.test.js","statementMap":{"0":{"start":{"line":3,"column":12},"end":{"line":3,"column":27}},"1":{"start":{"line":5,"column":16},"end":{"line":5,"column":47}},"2":{"start":{"line":7,"column":17},"end":{"line":7,"column":50}},"3":{"start":{"line":9,"column":39},"end":{"line":9,"column":93}},"4":{"start":{"line":11,"column":13},"end":{"line":11,"column":30}},"5":{"start":{"line":14,"column":0},"end":{"line":31,"column":3}},"6":{"start":{"line":15,"column":2},"end":{"line":18,"column":5}},"7":{"start":{"line":16,"column":17},"end":{"line":16,"column":43}},"8":{"start":{"line":17,"column":4},"end":{"line":17,"column":31}},"9":{"start":{"line":19,"column":2},"end":{"line":22,"column":5}},"10":{"start":{"line":20,"column":17},"end":{"line":20,"column":58}},"11":{"start":{"line":21,"column":4},"end":{"line":21,"column":32}},"12":{"start":{"line":23,"column":2},"end":{"line":26,"column":5}},"13":{"start":{"line":24,"column":17},"end":{"line":24,"column":50}},"14":{"start":{"line":25,"column":4},"end":{"line":25,"column":32}},"15":{"start":{"line":27,"column":2},"end":{"line":30,"column":5}},"16":{"start":{"line":28,"column":17},"end":{"line":28,"column":45}},"17":{"start":{"line":29,"column":4},"end":{"line":29,"column":32}}},"fnMap":{"0":{"name":"_interopRequireDefault","decl":{"start":{"line":9,"column":9},"end":{"line":9,"column":31}},"loc":{"start":{"line":9,"column":37},"end":{"line":9,"column":95}},"line":9},"1":{"name":"(anonymous_1)","decl":{"start":{"line":14,"column":34},"end":{"line":14,"column":35}},"loc":{"start":{"line":14,"column":46},"end":{"line":31,"column":1}},"line":14},"2":{"name":"(anonymous_2)","decl":{"start":{"line":15,"column":19},"end":{"line":15,"column":20}},"loc":{"start":{"line":15,"column":31},"end":{"line":18,"column":3}},"line":15},"3":{"name":"(anonymous_3)","decl":{"start":{"line":19,"column":20},"end":{"line":19,"column":21}},"loc":{"start":{"line":19,"column":32},"end":{"line":22,"column":3}},"line":19},"4":{"name":"(anonymous_4)","decl":{"start":{"line":23,"column":19},"end":{"line":23,"column":20}},"loc":{"start":{"line":23,"column":31},"end":{"line":26,"column":3}},"line":23},"5":{"name":"(anonymous_5)","decl":{"start":{"line":27,"column":20},"end":{"line":27,"column":21}},"loc":{"start":{"line":27,"column":32},"end":{"line":30,"column":3}},"line":27}},"branchMap":{"0":{"loc":{"start":{"line":9,"column":46},"end":{"line":9,"column":92}},"type":"cond-expr","locations":[{"start":{"line":9,"column":70},"end":{"line":9,"column":73}},{"start":{"line":9,"column":76},"end":{"line":9,"column":92}}],"line":9},"1":{"loc":{"start":{"line":9,"column":46},"end":{"line":9,"column":67}},"type":"binary-expr","locations":[{"start":{"line":9,"column":46},"end":{"line":9,"column":49}},{"start":{"line":9,"column":53},"end":{"line":9,"column":67}}],"line":9}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":1,"15":1,"16":1,"17":1},"f":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1},"b":{"0":[1,0],"1":[1,1]},"inputSourceMap":{"version":3,"sources":["isLength.test.js"],"names":["assert","require","describe","it","result","equal","Number","MIN_VALUE","Infinity"],"mappings":";;AAAA;;AAEA;;;;;;AADA,IAAMA,SAASC,QAAQ,QAAR,CAAf;;;AAGAC,SAAS,uBAAT,EAAkC,YAAM;AACtCC,KAAG,YAAH,EAAiB,YAAY;AAC3B,QAAMC,SAAS,wBAAS,CAAT,CAAf;AACAJ,WAAOK,KAAP,CAAaD,MAAb,EAAqB,IAArB;AACD,GAHD;AAIAD,KAAG,aAAH,EAAkB,YAAY;AAC5B,QAAMC,SAAS,wBAASE,OAAOC,SAAhB,CAAf;AACAP,WAAOK,KAAP,CAAaD,MAAb,EAAqB,KAArB;AACD,GAHD;AAIAD,KAAG,YAAH,EAAiB,YAAY;AAC3B,QAAMC,SAAS,wBAASI,QAAT,CAAf;AACAR,WAAOK,KAAP,CAAaD,MAAb,EAAqB,KAArB;AACD,GAHD;AAIAD,KAAG,aAAH,EAAkB,YAAY;AAC5B,QAAMC,SAAS,wBAAS,GAAT,CAAf;AACAJ,WAAOK,KAAP,CAAaD,MAAb,EAAqB,KAArB;AACD,GAHD;AAID,CAjBD","file":"isLength.test.js","sourceRoot":"C:/TUT2019/SoftwareTesting/COMP.SE.200-2021-2022-1/test/src","sourcesContent":["import { expect } from 'chai';\r\nconst assert = require('assert');\r\nimport isLength from './../../src/isLength';\r\n\r\ndescribe('isLength.js unit test', () => {\r\n  it('First case', function () {\r\n    const result = isLength(3);\r\n    assert.equal(result, true);\r\n  });\r\n  it('Second case', function () {\r\n    const result = isLength(Number.MIN_VALUE);\r\n    assert.equal(result, false);\r\n  });\r\n  it('Third case', function () {\r\n    const result = isLength(Infinity);\r\n    assert.equal(result, false);\r\n  });\r\n  it('Fourth case', function () {\r\n    const result = isLength('3');\r\n    assert.equal(result, false);\r\n  });\r\n});\r\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"4980b4b1f28da76a783b771aa9644236ffa4126a","contentHash":"39a8819dacaf928775eec978fabd8e326e63fd98f7f8a5e2dafb8b0107c354be"},"C:\\TUT2019\\SoftwareTesting\\COMP.SE.200-2021-2022-1\\test\\src\\isObject.test.js":{"path":"C:\\TUT2019\\SoftwareTesting\\COMP.SE.200-2021-2022-1\\test\\src\\isObject.test.js","statementMap":{"0":{"start":{"line":3,"column":12},"end":{"line":3,"column":27}},"1":{"start":{"line":5,"column":16},"end":{"line":5,"column":47}},"2":{"start":{"line":7,"column":17},"end":{"line":7,"column":50}},"3":{"start":{"line":9,"column":39},"end":{"line":9,"column":93}},"4":{"start":{"line":11,"column":0},"end":{"line":19,"column":3}},"5":{"start":{"line":12,"column":2},"end":{"line":18,"column":5}},"6":{"start":{"line":13,"column":20},"end":{"line":13,"column":206}},"7":{"start":{"line":15,"column":4},"end":{"line":17,"column":7}},"8":{"start":{"line":16,"column":6},"end":{"line":16,"column":90}}},"fnMap":{"0":{"name":"_interopRequireDefault","decl":{"start":{"line":9,"column":9},"end":{"line":9,"column":31}},"loc":{"start":{"line":9,"column":37},"end":{"line":9,"column":95}},"line":9},"1":{"name":"(anonymous_1)","decl":{"start":{"line":11,"column":34},"end":{"line":11,"column":35}},"loc":{"start":{"line":11,"column":46},"end":{"line":19,"column":1}},"line":11},"2":{"name":"(anonymous_2)","decl":{"start":{"line":12,"column":136},"end":{"line":12,"column":137}},"loc":{"start":{"line":12,"column":148},"end":{"line":18,"column":3}},"line":12},"3":{"name":"(anonymous_3)","decl":{"start":{"line":15,"column":18},"end":{"line":15,"column":19}},"loc":{"start":{"line":15,"column":38},"end":{"line":17,"column":5}},"line":15}},"branchMap":{"0":{"loc":{"start":{"line":9,"column":46},"end":{"line":9,"column":92}},"type":"cond-expr","locations":[{"start":{"line":9,"column":70},"end":{"line":9,"column":73}},{"start":{"line":9,"column":76},"end":{"line":9,"column":92}}],"line":9},"1":{"loc":{"start":{"line":9,"column":46},"end":{"line":9,"column":67}},"type":"binary-expr","locations":[{"start":{"line":9,"column":46},"end":{"line":9,"column":49}},{"start":{"line":9,"column":53},"end":{"line":9,"column":67}}],"line":9}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":6},"f":{"0":1,"1":1,"2":1,"3":6},"b":{"0":[1,0],"1":[1,1]},"inputSourceMap":{"version":3,"sources":["isObject.test.js"],"names":["describe","it","testCases","test","result","Function","map","testCase","to","equal"],"mappings":";;AAAA;;AACA;;;;;;AAEAA,SAAS,uBAAT,EAAkC,YAAM;AACtCC,KAAG,iIAAH,EAAsI,YAAM;AAC1I,QAAMC,YAAY,CAChB,EAAEC,MAAM,EAAR,EAAYC,QAAQ,IAApB,EADgB,EAEhB,EAAED,MAAM,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAAR,EAAmBC,QAAQ,IAA3B,EAFgB,EAGhB,EAAED,MAAME,QAAR,EAAkBD,QAAQ,IAA1B,EAHgB,EAIhB,EAAED,MAAM,IAAR,EAAcC,QAAQ,KAAtB,EAJgB,EAKhB,EAAED,MAAM,GAAR,EAAaC,QAAQ,KAArB,EALgB,EAMhB,EAAED,MAAM,CAAR,EAAWC,QAAQ,KAAnB,EANgB,CAAlB;;AASAF,cAAUI,GAAV,CAAc,UAACC,QAAD,EAAc;AAC1B,wBAAO,wBAASA,SAASJ,IAAlB,CAAP,EAAgCK,EAAhC,CAAmCC,KAAnC,CAAyCF,SAASH,MAAlD;AACD,KAFD;AAGD,GAbD;AAcD,CAfD","file":"isObject.test.js","sourceRoot":"C:/TUT2019/SoftwareTesting/COMP.SE.200-2021-2022-1/test/src","sourcesContent":["import { expect } from 'chai';\r\nimport isObject from './../../src/isObject';\r\n\r\ndescribe('isObject.js unit test', () => {\r\n  it(\"Should checks if `value` is of type `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\", () => {\r\n    const testCases = [\r\n      { test: {}, result: true },\r\n      { test: [1, 2, 3], result: true },\r\n      { test: Function, result: true },\r\n      { test: null, result: false },\r\n      { test: 'b', result: false },\r\n      { test: 3, result: false },\r\n    ];\r\n\r\n    testCases.map((testCase) => {\r\n      expect(isObject(testCase.test)).to.equal(testCase.result);\r\n    });\r\n  });\r\n});\r\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"8cec6b5d4d5910f7b0914e5ec822527ca27e9a07","contentHash":"256de1efe78c5780382a638500e3dc5dc5cc74c65251a71e8120348d99e78286"},"C:\\TUT2019\\SoftwareTesting\\COMP.SE.200-2021-2022-1\\src\\isObject.js":{"path":"C:\\TUT2019\\SoftwareTesting\\COMP.SE.200-2021-2022-1\\src\\isObject.js","statementMap":{"0":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"1":{"start":{"line":7,"column":14},"end":{"line":7,"column":268}},"2":{"start":{"line":7,"column":101},"end":{"line":7,"column":119}},"3":{"start":{"line":7,"column":141},"end":{"line":7,"column":266}},"4":{"start":{"line":33,"column":13},"end":{"line":33,"column":72}},"5":{"start":{"line":34,"column":2},"end":{"line":34,"column":69}},"6":{"start":{"line":37,"column":0},"end":{"line":37,"column":27}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":7,"column":84},"end":{"line":7,"column":85}},"loc":{"start":{"line":7,"column":99},"end":{"line":7,"column":121}},"line":7},"1":{"name":"(anonymous_1)","decl":{"start":{"line":7,"column":124},"end":{"line":7,"column":125}},"loc":{"start":{"line":7,"column":139},"end":{"line":7,"column":268}},"line":7},"2":{"name":"isObject","decl":{"start":{"line":32,"column":9},"end":{"line":32,"column":17}},"loc":{"start":{"line":32,"column":25},"end":{"line":35,"column":1}},"line":32}},"branchMap":{"0":{"loc":{"start":{"line":7,"column":14},"end":{"line":7,"column":268}},"type":"cond-expr","locations":[{"start":{"line":7,"column":84},"end":{"line":7,"column":121}},{"start":{"line":7,"column":124},"end":{"line":7,"column":268}}],"line":7},"1":{"loc":{"start":{"line":7,"column":14},"end":{"line":7,"column":81}},"type":"binary-expr","locations":[{"start":{"line":7,"column":14},"end":{"line":7,"column":42}},{"start":{"line":7,"column":46},"end":{"line":7,"column":81}}],"line":7},"2":{"loc":{"start":{"line":7,"column":148},"end":{"line":7,"column":265}},"type":"cond-expr","locations":[{"start":{"line":7,"column":244},"end":{"line":7,"column":252}},{"start":{"line":7,"column":255},"end":{"line":7,"column":265}}],"line":7},"3":{"loc":{"start":{"line":7,"column":148},"end":{"line":7,"column":241}},"type":"binary-expr","locations":[{"start":{"line":7,"column":148},"end":{"line":7,"column":151}},{"start":{"line":7,"column":155},"end":{"line":7,"column":183}},{"start":{"line":7,"column":187},"end":{"line":7,"column":213}},{"start":{"line":7,"column":217},"end":{"line":7,"column":241}}],"line":7},"4":{"loc":{"start":{"line":33,"column":13},"end":{"line":33,"column":72}},"type":"cond-expr","locations":[{"start":{"line":33,"column":44},"end":{"line":33,"column":55}},{"start":{"line":33,"column":58},"end":{"line":33,"column":72}}],"line":33},"5":{"loc":{"start":{"line":34,"column":9},"end":{"line":34,"column":68}},"type":"binary-expr","locations":[{"start":{"line":34,"column":9},"end":{"line":34,"column":22}},{"start":{"line":34,"column":27},"end":{"line":34,"column":44}},{"start":{"line":34,"column":48},"end":{"line":34,"column":67}}],"line":34}},"s":{"0":1,"1":1,"2":6,"3":0,"4":6,"5":6,"6":1},"f":{"0":6,"1":0,"2":6},"b":{"0":[1,0],"1":[1,1],"2":[0,0],"3":[0,0,0,0],"4":[0,6],"5":[6,5,3]},"inputSourceMap":{"version":3,"sources":["isObject.js"],"names":["isObject","value","type"],"mappings":";;;;;;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;AAuBA,SAASA,QAAT,CAAkBC,KAAlB,EAAyB;AACvB,MAAMC,cAAcD,KAAd,yCAAcA,KAAd,CAAN;AACA,SAAOA,SAAS,IAAT,KAAkBC,SAAS,QAAT,IAAqBA,SAAS,UAAhD,CAAP;AACD;;kBAEcF,Q","file":"isObject.js","sourceRoot":"C:/TUT2019/SoftwareTesting/COMP.SE.200-2021-2022-1/src","sourcesContent":["/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * isObject({})\n * // => true\n *\n * isObject([1, 2, 3])\n * // => true\n *\n * isObject(Function)\n * // => true\n *\n * isObject(null)\n * // => false\n */\nfunction isObject(value) {\n  const type = typeof value\n  return value != null && (type === 'object' || type === 'function')\n}\n\nexport default isObject\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"6aa998ca9b4bfe6923a02c2e4854aaaf8da445a2","contentHash":"81f98f6259ff8fdd60a0955b815938219feac7c32d758767eea038883a45ff2a"},"C:\\TUT2019\\SoftwareTesting\\COMP.SE.200-2021-2022-1\\test\\src\\isSymbol.test.js":{"path":"C:\\TUT2019\\SoftwareTesting\\COMP.SE.200-2021-2022-1\\test\\src\\isSymbol.test.js","statementMap":{"0":{"start":{"line":3,"column":12},"end":{"line":3,"column":27}},"1":{"start":{"line":5,"column":16},"end":{"line":5,"column":47}},"2":{"start":{"line":7,"column":17},"end":{"line":7,"column":50}},"3":{"start":{"line":9,"column":39},"end":{"line":9,"column":93}},"4":{"start":{"line":11,"column":13},"end":{"line":11,"column":30}},"5":{"start":{"line":14,"column":0},"end":{"line":23,"column":3}},"6":{"start":{"line":15,"column":2},"end":{"line":18,"column":5}},"7":{"start":{"line":16,"column":17},"end":{"line":16,"column":57}},"8":{"start":{"line":17,"column":4},"end":{"line":17,"column":31}},"9":{"start":{"line":19,"column":2},"end":{"line":22,"column":5}},"10":{"start":{"line":20,"column":17},"end":{"line":20,"column":47}},"11":{"start":{"line":21,"column":4},"end":{"line":21,"column":32}}},"fnMap":{"0":{"name":"_interopRequireDefault","decl":{"start":{"line":9,"column":9},"end":{"line":9,"column":31}},"loc":{"start":{"line":9,"column":37},"end":{"line":9,"column":95}},"line":9},"1":{"name":"(anonymous_1)","decl":{"start":{"line":14,"column":34},"end":{"line":14,"column":35}},"loc":{"start":{"line":14,"column":46},"end":{"line":23,"column":1}},"line":14},"2":{"name":"(anonymous_2)","decl":{"start":{"line":15,"column":23},"end":{"line":15,"column":24}},"loc":{"start":{"line":15,"column":35},"end":{"line":18,"column":3}},"line":15},"3":{"name":"(anonymous_3)","decl":{"start":{"line":19,"column":24},"end":{"line":19,"column":25}},"loc":{"start":{"line":19,"column":36},"end":{"line":22,"column":3}},"line":19}},"branchMap":{"0":{"loc":{"start":{"line":9,"column":46},"end":{"line":9,"column":92}},"type":"cond-expr","locations":[{"start":{"line":9,"column":70},"end":{"line":9,"column":73}},{"start":{"line":9,"column":76},"end":{"line":9,"column":92}}],"line":9},"1":{"loc":{"start":{"line":9,"column":46},"end":{"line":9,"column":67}},"type":"binary-expr","locations":[{"start":{"line":9,"column":46},"end":{"line":9,"column":49}},{"start":{"line":9,"column":53},"end":{"line":9,"column":67}}],"line":9}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1},"f":{"0":1,"1":1,"2":1,"3":1},"b":{"0":[1,0],"1":[1,1]},"inputSourceMap":{"version":3,"sources":["isSymbol.test.js"],"names":["assert","require","describe","it","result","Symbol","iterator","equal"],"mappings":";;AAAA;;AAEA;;;;;;AADA,IAAMA,SAASC,QAAQ,QAAR,CAAf;;;AAGAC,SAAS,uBAAT,EAAkC,YAAM;AACtCC,KAAG,gBAAH,EAAqB,YAAY;AAC/B,QAAMC,SAAS,wBAASC,OAAOC,QAAhB,CAAf;AACAN,WAAOO,KAAP,CAAaH,MAAb,EAAqB,IAArB;AACD,GAHD;AAIAD,KAAG,iBAAH,EAAsB,YAAY;AAChC,QAAMC,SAAS,wBAAS,KAAT,CAAf;AACAJ,WAAOO,KAAP,CAAaH,MAAb,EAAqB,KAArB;AACD,GAHD;AAID,CATD","file":"isSymbol.test.js","sourceRoot":"C:/TUT2019/SoftwareTesting/COMP.SE.200-2021-2022-1/test/src","sourcesContent":["import { expect } from 'chai';\r\nconst assert = require('assert');\r\nimport isSymbol from './../../src/isSymbol';\r\n\r\ndescribe('IsSymbol.js unit test', () => {\r\n  it('First scenario', function () {\r\n    const result = isSymbol(Symbol.iterator);\r\n    assert.equal(result, true);\r\n  });\r\n  it('Second scenario', function () {\r\n    const result = isSymbol('abc');\r\n    assert.equal(result, false);\r\n  });\r\n});\r\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"f707db92101c14e9e1faba9db087a9b088fedf8a","contentHash":"42c07528574a53795f60a2936c8845948d042a30de037bf5546fc63665aa67a4"}}